frequently asked questions intel® multicore processor architecture essential concepts the move to multicore architecture explained how to benefit from multicore architecture challenges in multithreaded programming how intel can help additional resources why isn’t my question answered in this faq this faq attempts to highlight a subset of the publicly available multicore information at intelcom it is not intended to be a comprehensive guide to all multicorerelated material that intel has published see the next item for tips on finding answers elsewhere if you’d like to suggest an update to this faq please contact support or post your software related multicore questions directly in the threading on intel parallel architectures discussion forum by posting your question in the intel® developer zone forums you benefit from the knowledge of many people while the community benefits from the discussion i didn’t find the answer to my question in this faq where should i look next start by searching intelcom it’s possible to search the subset of the site relating to software development by using the advanced search  httpwwwintelcomcontentwwwusensearchhtml  another option is searching the intel developer zone site using google to do this add “sitesoftwareintelcom” to a google search next search the intel® developer zone forums the search box is at the bottom of the page if the question hasn’t been answered post it in the appropriate forum or contact intel customer support how do i report a change in the status of an faq item as intel continues to ramp multicore architectures across its product lines and developers become more adept at writing multithreaded code this faq will become dated or obsolete if you believe that an item is no longer valid or in need of updating please contact intel® developer zone support the entire developer community appreciates your assistance in keeping this faq current where should i post or send questions that are not related to multicore architecture or threading intel developer zone forums offer a place for public questions and answers on intel software development products intel platforms and technologies and other topics intel engineers participate and provide answers in the forums another option is contacting intel® customer support back to contents essential concepts what is multicore architecture explained most simply multicore processor architecture entails silicon design engineers placing two or more execution cores or computational engines within a single processor package this multicore processor plugs directly into a single processor socket but the operating system perceives each of its execution cores as a discrete logical processor with all the associated execution resources multicore chips do more work per clock cycle are able to run at a lower frequency and may enhance user experience in several ways such as improving performance of compute and bandwidthintensive activities what is the difference between multicore architecture and hyperthreading ht technology technology ht technology allows more efficient use of a single execution core by allowing multiple threads to share the core’s resources whereas multicore capability provides two or more complete sets of execution resources to increase compute throughput any application that has been threaded for ht technology should deliver great performance when run on an intel multicore processorbased system accordingly users will be able to take advantage of many existing applications that are already optimized for two threads from the earliest days of intel’s transition to multicore architectures across its desktop mobile and server processor product lines multicore architecture doesn’t signal the death of ht technology instead ht technology makes it possible to further maximize performance by splitting the resources of each individual core in the multicore system what is the impact of multicore architecture on licensing is it going to increase software licensing costs if so for which application operating systems oses or databases software licensing decisions are the purview of individual software vendors as a user and buyer of software intel believes in influencing licensing models through its purchasing negotiations and decisions the company is advocating for the industry to continue licensing aligned with measurable software usage and business value by urging vendors to base licenses “per socket” rather than “per core” when software licensing is based on underlying hardware intel’s strategy is to maintain industry platform pricing models intel believes multicore architecture is a logical evolution of hyperthreading technology and the industry’s history generally runs counter to dramatic increases in total solution hardware plus software costs people have come to expect faster cheaper and better products the good news is that many major software vendors including microsoft red hat and others agree with intel and have already announced persocket licensing policies – treating a multicore processor as a single cpu is there any downside to multicore architecture is it possible that my application will run slower generally any application that will work with an intel singlecore processor will work with an intel multicore processor multicore platforms provide the next generation of performance costefficiency and business value for threaded applications there is only upside there are some exceptions to the rule such as wellthreaded memoryintensive applications where memory requests can easily exceed the capacity of memory subsystem which will diminish the performance of the application intel understands that not all applications – or more precisely important operations within a given application – are amenable to parallelization or threading in these cases developers should encourage their customers to look for different usage or deployment models make use of greater multitasking or look for additional solution features or functionality that utilize the additional cores back to contents the move to multicore architecture explained why is intel implementing multicore architectures across its product line through intel’s ongoing research and development efforts at intel the doubling of transistors every couple of years has been maintained for forty years but scaling out could not continue indefinitely because of several lessfriendly laws of physics a 1993era intel pentium processor had around 3 million transistors while today’s intel® itanium® 2 processor has nearly 1 billion transistors if this rate continued intel processors would soon be producing more heat per square centimeter than the surface of the sunwhich is why the problem of heat is already setting hard limits to frequency increases these challenges and others power memory latency resistancecapacitance rc delay and scalar performance – are described in the 2004 technologyintel magazine story titled “architecting the era of tera” pdf 298kb despite these challenges users continue to demand increased performance today there are more than half a billion pc users worldwide home users rely on pcs for delivery and creation of rich media content placing new demands on applications for encoding and decoding multimedia filed for editing video business users of software for 3d modeling scientific calculations or highend digital content creation have their own growing list of performanceheavy requirements in both cases performance means more than wringing additional benefits from a single application because users commonly multitask actively toggling between two or more applications or working in environments in which many background processes compete for scarce processor resources multicore processors are the next innovation in intel’s continuing commitment to enhancing computing architectures and platforms based on what people want and how they use technology intel believes multicore platforms will empower the development of new applications that will enable wideranging advances in everything from medicine to it from the digital office to the digital home from mobility solutions to the latest games the company plans on bringing the benefits of its multicore platforms to all its targeted segments desktop and mobile pcs as well as servers and workstations how committed is intel to multicore architectures very multicore processor capability is central to the intel platformcentric approach the company continues to invest in the intel® tera–scale computing research program an research and development effort to scale todays multicore process up to designs that have tens or hundreds of energyefficient cores with teraflops of compute capability at the fall 2006 intel® developer forum intel senior fellow and director of the company’s corporate technology group justin rattner announced the company had developed an 80core processor and was continuing to work on resolving data traffic heat and latency issues and to determine ways to these chips can run existing software and operating systems in the marketplace the move to threading and concurrency in software likely will be pulled along by the rapid transition to multicore architectures back to contents how to benefit from multicore architecture if i do nothing will i benefit from multicore architecture how or will my application’s performance suffer the answer to these questions depends on any number of scenarios as a result of intel’s efforts to drive smp symmetric multiprocessing and hyperthreading technology over the past decade most midtier and backend applications already architected for multiprocessor servers are highly threaded today – particularly database application and web servers for these applications the question is essentially moot although opportunities still may exist to improve threading performance and correctness since multicore processors can execute completely separate threads of code a number of different usage models are possible one thread can run from an application a second thread runs from an operating system two applications can execute simultaneously concurrent workloads can be virtualized or a fault isolation and failover implementation can be employed additional threads can be utilized for background applications such as virus protection security compression encryption and synchronization multicore processors can be used to facilitate even more effective server consolidation but the answer to the questions remains “it depends” unthreaded applications certainly will run on a multicore processor if you do nothing the performance of an individual unthreaded application or workload on a single core of a multicore processor essentially will mirror its performance on a singlecore processor with equivalent clock speed cache size and architecture and frontside bus and io capabilities if you’re running an unthreaded application the application can only make use of one core when you thread the application there should be some speedup as the operating system and the application run on separate cores but intel says that actual performance gains c annot be projected easily the company does stress however that relying on straightline execution flow for significant application performance gains in the longterm simply will not bear the fruit it has in the past investment in concurrent programming is the way to boost performance today and in the future is any operating system os particularly adept at benefiting from multicore architecture which one s why all major oses including mac os x microsoft windows vista windows server red hat linux and novell su se linux already are threaded to take advantage of hyperthreading technology and now multicore architecture there’s a long history of broad os support for existing scalable platforms thus any os which is smpcapable can schedule single applications across multiple cores many oses already support anywhere from 32 to 64 cores today as a result os support it not an obstacle what applications are good candidates to be moved from serial to multithreaded to experience performance gains on multicore systems any program that is in a class of applications where threading is already relatively common – video encoding 3d rendering videophoto editing and high performance computingworkstation applications these applications are especially amenable to threadlevel parallelism because many of their computations can run simultaneously in the case of gamming applications threading has the potential to be immensely beneficial several video game vendors including remedy entertainment valve epic games and ubisoft entertainment have already released multithreaded versions of popular gaming titles and plan on threading future titles to take advantage of multicore processors for example valve is integrating full support for multithreading including the source game engine and developer tools eventually all of the gaming company’s products will support multicore technology and valve plans to backport it to older games valve president and cofounder gabe newell told tech report “quadcore will change every aspect of pc gaming it will change how we create our games how we provision our service and how we design our games the scalability weve seen in graphics over the last few years will now extend to physics ai animation and all the systems which are critical to moving beyond the era of pretty but dumb games”however intel stresses that developers should not look at the question of performance from a singleapplication perspective different usage and deployment models such as those outlined in the answer to if i do nothing will i benefit from multicore architecture above and besides using threaded applications when else might end users experience a performance gain on multicore systems below can provide equal or greater end user benefits and experience in a multicore environment besides using threaded applications when else might end users experience a performance gain on multicore systems multitasking users or those working in environments marked by lots of background processing also should benefit from multicore systems behindthescenes processing is increasingly the norm in business computing environments examples include users who run background data mining queries while working o n other tasks in the foreground or corporate it departments that unobtrusively update software troubleshoot hardware or perform virus scanning and other management tasks over the corporate network back to contents challenges in multithreaded programming do i have to become a threading expert how if you have been developing applications for multiprocessing environments already – in the enterprise arena for example – then you or your coworkers may already have the required skills for others this is arguably a major industry transition and requires a fundamental shift towards concurrency in application development the fact is all major processor chip manufacturers are moving to multicore architectures the days of boosting clockspeeds to increase straightline instruction throughput are winding down intel believes developers will reap long term rewards from their efforts to develop threading expertise today the company has been working with operating system and application vendors during the past decade to optimize and enhance the threading capabilities of their software the intel software and solutions group ssg threading enabling program predates the introduction of hyperthreading technology this program is expanding further to support this software transition ssg offers threading tools compilers and other performancetuning toolkits whitepapers and other technical resources to help software developers implement threadlevel parallelism enhancements in their code see how intel can help below for more information how much worktimeeffort will it take me to thread my application fair warning thinking in terms of concurrency and threading especially for the uninitiated is difficult threaded software has the same potential for bugs as serial code however there are additional problems that can crop up the most common of these is known as a ‘race condition’ where multiple threads update the same memory location at the same time but the order and timing of each threads execution can change the results from one run to the next also code that’s properly threaded doesn’t always perform faster on a multicore system this happens when the threads are reserialized because they share a dependency on a single resource such as io memory or network throughput despite these challenges resources are available at intel to help for example intel® threading analysis tools save time by identifying hardtofind threading errors and performance bottlenecks how can i determine if i should thread my application or not there are several aspects to considering when deciding if an application should be threaded an important first step is formally identifying highly threaded application designs both as a nearterm and longterm goal in doing so consider an application’s ability to handle changes which typically increase in system resources or data set sizes the number of cores available in the future will only increase an d threading will minimize latency boost an application’s scalability and make code more flexible retrofitting parallelization into a product’s architecture is likely to be more expensive in the long run than using an architecture that lends itself to multithreading from the earliest design stages by weighing an application’s timeframe for completion against its future performance on multicore hardware you can determine if threading an application is appropriate in addition consider how many execution cores a given piece of software intends to support if an application is architected specifically to support up to a certain number of cores it may need to be redesigned once the mainstream machines that support it have moved significantly beyond that number of cores by making the upper limit on the number of threads that the application can create configurable you can change the allowable number of threads in the future as hardware evolves when comparing the performance of applications both serial and parallel the bottom line is wallclock execution time critically analyze what segments of code or operations can run in parallel and thus maximize performance epic games founder and president tim sweeney told anand tech that when his company began multithreading its products developers focused on physics animation updates the renderers scene traversal loop sound updates and content streaming the company didn’t attempt to multithread systems that were highly sequential and objectoriented such as the gameplay sweeney added “its especially important to focus multithreading efforts on the selfcontained and performancecritical subsystems in an engine that offer the most potential performance gain you definitely dont want to execute your 150000 lines of objectoriented gameplay logic across multiple threads  the combinatorical complexity of all of the interactions is beyond what a team can economically manage but if youre looking at handing off physics calculations or animation updates to threads that becomes a more tractable problem”next characterize the difficulty of parallelizing specific workloads by determining the amount of developer effort involved in creating the threaded version workloads may be seen as fitting into one of three broadly defined categories easily threaded workloads problems which imply an obvious threading model and constitute about 10 to 20 percent of all workloads moderately difficulttothread workloads workloads that can be parallelized with substantial effort which is warranted by potential performance gains to protect a competitive advantage such as some database applications data mining synthesizing text and voice processing these tasks constitute 60 percent of workloads very difficulttothread workloads workloads that are very difficult to parallelize due to linear arrangements where the input data of one subtask is generally dependent upon the output data of another the business of threading such workloads must be carefully considered against the cost and technical complexity of doing so if your application is network intensive also consider the ratio of application cpu time to network time and whether or not the network stack for your os is already parallelized as outlined in the paper title “ critical analysis of the need for parallelizing network stacks ” by intel network research scientist annie foong and intel network software engineer erik j johnson once the above issues have been addressed consider available tools and resources that can help speed up or simplify the multithreading process the threading for multicore developer community on the intel developer zone offers several papers including “ writing parallel programs a multilanguage tutorial introduction ” offer high level characteristics of different notations in sufficient detail so programmes can make an intelligent choice of which notation to invest one’s time in mastering does intel believe every application should be threaded no intel is rapidly moving to multicore architectures across all product lines and makes available many resources for developers interested in threading their applications the company says that in the future the biggest performance gains are to be had from architectural innovations and not necessarily from increasing clock speeds however the threading costbenefit analysis is left to developers applications that are not cpubound and don’t need to scale for increasing performance reliability and security may not be good candidates for threading back to contents how intel can help ive decided it makes sense to thread now what register for the intel developer zone which provides technical articles and code samples strategic articles by intel executives and other industry luminaries webbased training sessions facetoface courses and webcasts software products for evaluation and purchase sdks and tools and community forum discussions with experts and peers on development products platforms and technologies registration for the intel developer zone – which features lots of threadingrelated content – is free and allows for access to all developer centers content a biweekly newsletter the solutions catalog and a personalized home page is there a processchecklist i can use to get started in learning about threading the intel® parallel programming community provides technical information tools innovation  support from industry experts learn how to best develop parallel programs and multithreaded software on multicore and multiprocessor platforms for university faculty the intel® academic community the onestopshop for training on intel’s software technologiesoffers a comprehensive threading curriculum delivered online and through classroom lectures courses include introductions to multithreaded programming tools for threading advanced thread programming and threading specific applications where is the multicore developer center on the intel developer zone taking advantage of multicore chips simply requires writing multithreaded applications and the intel® developer zone does maintain a parallel programming  multicore development community page how do i get support in threading my code to take advantage of multicore architecture anyone can submit general technical support questions via email by visiting intel customer support registered users of the intel developer zone registration is free can post questions in the intel developer zone forums intel engineers participate and provide answers in the forums developers who purchase intel® software development products or become an intel® software partner are eligible for intel premier support which provides more advanced and personalized troubleshooting and support by email real solutions for businesses like yours provides feeforservice transition guidance for multicore processors tailored to a customer’s unique business and it environment where are the multicore or threading discussion forums intel developer zone forums offer discussions on intel software development products intel platforms and technologies and other topics intel engineers participate and provide answers in the forums the threading on intel parallel architectures forum is welltrafficked and addresses the challenge of developing os and applicationlevel threaded applications for server and desktop environments are there any books available explaining how to code for multicore architecture multicore programming a 2006 intel press book by shameem akhter and jason roberts helps software developers write highperformance multithreaded code for intels multicore architecture while avoiding the common parallel programming issues associated with multithreaded programs intel has been working with leading software vendors for more than a decade to deliver threadoptimized code first for multiprocessor platforms then for hyperthreading technology and now for multicore architecture what intel software development products can help to create threaded software intel® thread checker v 31 and intel® thread profiler v 31 locate threading bugs and threading performance bottlenecks other tools that may be useful in creating multithreaded code – including analyzers that support overtime sampling of threads compilers that support the open mp threading model and performance libraries that themselves are threaded for performance – are described at the intel developer zone parallel programming web page back to contents additional resources multithreading for experts synchronization intel® multicore processor architecture development backgrounder multicore processor architecture explained 