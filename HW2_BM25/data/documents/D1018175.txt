tips and tricks how to configure url authorization background url authorization allows asp net applications to manage access to resources without having to rely on the security system of the operating system prior to asp net the only easy way to manage access to resources was to rely on access control lists acls the problem with this approach is that acls grant or deny access based on the identity of the running thread therefore you could not easily protect resources from users who were not authenticated by internet information services iis asp net solves this problem by creating its own security layer on top of the operating system how it works url authorization works by way of a url authorization module whenever a request is made to an asp net resource the url authorization module examines the http context for a principal object one that implements iprincipal it calls the is in role method of this object to determine whether a user is authorized to access a resource that is granted based on role membership it accesses the underlying identity an iidentity instance to determine whether a user is authorized to access a resource that is granted based on the name of an identity it also uses this instance to determine whether an anonymous user is allowed to access a resource authorization authorization is performed based on the configuration of authorization elements in the webconfig and machineconfig files the authorization element supports allow and deny elements which are selfexplanatory the default setting of the machineconfig file allows access to all users this behavior can be overridden by individual webconfig files to allow or deny access to a user you add an element similar to the followingallow userssingh deny userssamhowever url authorization also supports the and  symbols which stand for anonymous users and all users respectively elements are processed from top to bottom this means that if a user is already granted or denied access by an element higher in the list elements lower in the list will not affect that same user for example consider the following configurationauthorization allow users deny users  authorizationthe allow element appears first it grants access to all users the following deny element denies access to anonymous users however because anonymous users are a subset of all users anonymous users would have already been processed and granted access by the previous allow element therefore the deny element would have no effect to deny access to anonymous users and grant access to all other users you would need to a configuration similar to the followingauthorization deny users  allow users authorizationanonymous users are denied access first therefore when the allow element is processed only users that are not anonymous will be granted access conclusion with asp net you no longer need to use impersonation and acls to grant or deny access to resources for users of a web application you can use url authorization while continuing to allow the web application run under a dedicated identity if users need to gain access to resources that are not within the scope of the web application or are not protected by url authorization you can use a combination of declarative and imperative rolebased security checks back to tips and tricks 