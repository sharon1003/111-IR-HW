verificationvalidationcertification carnegie mellon university 18849b dependable embedded systems spring 1999 author eushiuan tran abstract in the development of an embedded system it is important to be able to determine if the system meets specifications and if its outputs are correct this is the process of verification and validation v  v and its planning must start early in the development life cycle both aspects are necessary as a system meeting its specifications does not necessary mean it is technically correct and vice versa there are many different v  v techniques which are applicable at different stages of the development life cycle the results of v  v forms an important component in the safety case which is a document used to support certification certification is usually pursued due to either legal reasons or economic advantages the certification process also starts from the beginning of the life cycle and requires cooperation between the developer and regulatory agency from the very start thorough v  v does not prove that the system is safe or dependable and there is always a limit to how much testing is enough testing in addition certification does not prove that a system is correct so it does not eliminate the developers legal and moral obligations therefore extreme care should be taken in the developement of embedded systems to make sure that the right amount of time is spent on v  v and also that certification not be used to prove that a system is correct contents introduction key concepts verification techniques validation techniques certification process available tools techniques and metrics relationship to other topics conclusions annotated reference list  further reading loose ends introduction verification validation and certification are essential in the life cycle of any safety critical embedded system the development of any system is not complete without rigorous testing and verification that the implementation is consistent with the specifications verification and validation v  v have become important especially in software as the complexity of software in systems has increased and planning for v  v is necessary from the beginning of the development life cycle over the past 20 to 30 years software development has evolved from small tasks involving a few people to enormously large tasks involving a many people because of this change verification and validation has similarly also undergone a change previously verification and validation was an informal process performed by the software engineer himself however as the complexity of systems increased it became obvious that continuing this type of testing would result in unreliable products it became necessary to look at v  v as a separate activity in the overall software development life cycle the v  v of today is significantly different from the past as it is practiced over the entire software life cycle it is also highly formalized and sometimes activities are performed by organizations independent of the software developer andriole86 in addition v  v is very closely linked with certification because it is a major component in support of certification while the terms verification and validation are used interchangably in papers and texts there are distinct differnences in their terminology according to the ieee standard glossary of software engineering terminology verification is defines as the process of evaluating a system or component to determine whether the products of a given development phase satisfy the conditions imposed at the start of that phase validation on the other hand is defined as the process of evaluating a system or component during or at the end of the development process to determine whether it satisfies specified requirements so verification simply demonstrates whether the output of a phase conforms to the input of a phase as opposed to showing that the output is actually correct verification will not detect errors resulting from incorrect input specification and these errors may propagate without detection through later stages in the development cycle it is not enough to only depend on verification so validation is necessary to check for problems with the specification and to demonstrate that the system is operational finally certification is a written guarantee that a system or compnent complies with its specified requirements and is acceptable for operational use key concepts verification techniques there are many different verification techniques but they all basically fall into 2 major categories  dynamic testing and static testing dynamic testing  testing that involves the execution of a system or component basically a number of test cases are chosen where each test case consists of test data these input test cases are used to determine output test results dynamic testing can be further divided into three categories  functional testing structural testing and random testing functional testing  testing that involves identifying and testing all the functions of the system as defined within the requirements this form of testing is an example of blackbox testing since it involves no knowledge of the implementation of the system structural testing  testing that has full knowledge of the implementation of the system and is an example of whitebox testing it uses the information from the internal structure of a system to devise tests to check the operation of individual components functional and structural testing both chooses test cases that investigate a particular characteristic of the system random testing  testing that freely chooses test cases among the set of all possible test cases the use of randomly determined inputs can detect faults that go undetected by other systematic testing techniques exhaustive testing where the input test cases consists of every possible set of input values is a form of random testing although exhaustive testing performed at every stage in the life cycle results in a complete verification of the system it is realistically impossible to accomplish andriole86static testing  testing that does not involve the operation of the system or component some of these techniques are performed manually while others are automated static testing can be further divided into 2 categories  techniques that analyze consistency and techniques that measure some program property consistency techniques  techniques that are used to insure program properties such as correct syntax correct parameter matching between procedures correct typing and correct requirements and specifications translation measurement techniques  techniques that measure properties such as error proneness understandibility and wellstructuredness andriole86validation techniques there are also numerous validation techniques including formal methods fault injection and dependability analysis validation usually takes place at the end of the development cycle and looks at the complete system as opposed to verification which focuses on smaller subsystems formal methods  formal methods is not only a verification technique but also a validation technique formal methods means the use of mathematical and logical techniques to express investigate and analyze the specification design documentation and behavior of both hardware and software fault injection  fault injection is the intentional activation of faults by either hardware or software means to observe the system operation under fault conditions hardware fault injection  can also be called physical fault injection because we are actually injecting faults into the physical hardware software fault injection  errors are injected into the memory of the computer by software techniques software fault injection is basically a simulation of hardware fault injection dependability analysis  dependability analysis involves identifying hazards and then proposing methods that reduces the risk of the hazard occuring hazard analysis  involves using guidelines to identify hazards their root causes and possible countermeasures risk analysis  takes hazard analysis further by identifying the possible consequences of each hazard and their probability of occuring kopetz97the ieee standard for software verification and validation ieee std 10121998 contains information on software integrity levels the v  v process the software v  v reporting administrative and documentation requirements and an outline of the software verification and validation plan verification and validation can be performed by the same organization performing the design development and implementation but sometimes it is performed by an independent testing agency this is called independent verification and validation iv  v these agencies usually need to be accredited by a higher organization to be sure that their results are dependable for example in the united kingdom the national measurement accreditation service has begun to accredit companies for testing computer software used in safetycritical systems the first company was accredited in 1994 the testing methods approved includes a suite of inhouse procedures including static and dynamic testing techniques storey96verification and validation is a very time consuming process as it consists of planning from the start the development of test cases the actual testing and the analysis of the testing results it is important that there are people specifically in charge of v  v that can work with the designers since exhaustive testing is not feasible for any complex system an issue that occurs is how much testing is enough testing sure the more testing the better but when do the cost and time of testing outweigh the advantages gained from testing the amount of time and money spent on v  v will certainly vary from project to project in many organizations testing is done until either or both time and money runs out whether this method is effective or not it is a technique used by many companies certification process verification and validation are part of the long certification process for any embedded system there are different reasons why a product needs certification sometimes certification is required for legal reasons for example before an aircraft is allowed to fly it must obtain a license being certified would also be important for commercial reasons like having a sales advantage one of the main reasons for certification is to show competence in specific areas certification are usually carried out by government agencies or other organizations with a national standing certification can be applied to either organizations or individuals tools or methods or systems or products certification of organizations aims at assuring that the organization achieves a certain level or proficiency and that they agree to certain standards or criterias this however is not applicable to all areas because while it is easy to measure the procedures of a company it is much harder to measure the competence with which they are performed so certification is usually applied to areas such as quality assurance and testing as opposed to design certification may also apply to individuals where workers must be certified in order to be a certain profession this usually applies to workers such as doctors lawyers accountants and civil engineers tools or methods may also be certified for example although do178b does not specifically define the tools that must be used it does give certain requirements of tools used to gain certification finally systems or products may also be certified storey96 in certification there is always the issue of whether artifacts or methodology be certified this becomes an issue in the certification of products containing software because software testing is so difficult certification must be based on the process of development and on the demonstrated performance this is a case where the methodology development process is certified instead of the artifact software even though certification does not occur until the end of a system development cycle the planning starts from the very beginning because certification is a complicated process between the developer and the regulatory agency the certification liason between the parties must be established early on in the process next the developer should submit a verification plan for approval by the regulatory agency after the submission discussion takes place between the developer and regulatory agency to resolve areas of misunderstanding and disagreement changes to the methods used have to be approved by the regulatory body to insure that certification will not be affected throughout the entire development life cycle of the product documentation must be continually submitted to show that the certification plan is satisfied the regulating authority will also hold a series of reviews to discuss the submitted material at the end if the terms of the certification plan have been satisfied then a certificate or license is issued storey96the safety case is an important document used to support certification it contains a set of arguments supported by analytical and experimental evidence concerning the safety of a design it is created early in the development cycle and is then expanded as issues important to safety comes up in the safety case the regulatory authority will look to see that all potential hazards have been identified and that appropriate steps have been taken to deal with them in addition the safety case must also demonstrate that appropriate development methods have been adopted and that they have been performed correctly items that should be included in the safety case includes but are not limited to the following specification of safety requirements results of hazard and risk analysis verification and validation strategy and results of all verification and validation activities the contesse test handbook which is applicable in the united kingdom lists a number of items that should be included in a safety case storey96a potential problem with certification is that manufacturers use it to avoid its legal and moral obligations an important aspect of certification is that it does not prove that the system is correct certification only proves that a system has met certain standards set by the certifying agency the standards show that a product has met certain guidelines but it does not mean that the system is correct any problem with the system is ultimately the responsibility of the designer and manufacturer not the certification agency in the united states different government organizations are responsible for the certification of different products for example the fda is in charge of the certification of medical devices and the faa is in charge of the certification of aircraft specifically the faa software certification is based on the standard rtcado178b the standard provides information about all aspects of the software certification process including the following sections software planning process software development process software verification process and the certificate liason process the software verification process includes more than testing since testing in general cannot show the absence of errors therefore the software verification process is usually a combination of review analyses and testing review and analyses are performed on the following different components rtca92requirements analyses  to detect and report requirements errors that may have surfaced during the software requirements and design process software architecture  to detect and report errors that occured during the development of the software architecture source code  to detect and report errors that developed during source coding outputs of the integration process  to ensure that the results of the integration process is complete and correct test cases and their procedures and results  to ensure that the testing is performed accurately and completely the 2 main objectives of the software testing process is to demonstrate that it satisfies all the requirements and to demonstrate that errors leading to unacceptable failure conditions are removed the testing process includes the following three different types of testing rtca92hardwaresoftware integration testing  to verify that the software is operating correctly in the computer environment software integration testing  to verify the interrelationships between the software requirements and components and to verify the implementation of the requirements and components in the software architecture lowlevel testing  to verify the implementation of software lowlevel requirements the standard includes a plan that outlines the information necessary for the certification of the software and the software verification plan a section also details tool qualification this is necessary when processes in the standard are eliminated reduced or automated by using a software tool without following the software verification process in addition there is also a section in the standard about alternative methods this section includes information that were not in the previous section because of immaturity at time of print some alternative verification methods include the use of formal methods and exhaustive input testing rtca92 research has been performed on formal methods and the certification of critical systems there are two reasons why formal methods might be used to support certification the first reason is to use formal methods for reasons other than improved quality control and assurance this can be achieved by three ways to supplement traditional processes and documentation to substitute formal specifications for some traditional documentation and to substitute formal proofs for some traditional reviews and analyses the second reason is to use formal methods to improve quality control and assurance rushby93 however it is not always possible to formally prove all pieces of software another alternative method of testing is exhaustive input testing this method has limitations too as it is only feasible if the software component is simple and isolated the certification process is greatly assisted by and sometimes requires the use of guidelines and standards some documents are specific to a particular industry while others are generic several standards will be briefly mentioned below storey96iec 1508 functional safety safety related systems  this international standard is primarily concerned with safetyrelated control systems including electrical electronic or programmable electronic subsystems however it also gives more general guidance so that it is applicale for all forms of safetycritical systems mo d interim defense standard 0055  requirements for the procurement of safetycritical software in defense equipment  major parts of this british standard deals with safety management issues and software engineering practices hse guidelines  programmable electronic systems in safetyrelated applications  this is a 2 volume set of guidelines on the design and development of safetycritical programmable electronic systems published by the united kingdom health and safety executive the first volume contains an introductory guide for nonspecialists while the second volume conatins technical information for more specialized engineers in addition there is also iso 9000 certification this international certification contrary to popular belief is not concerned with how to make wellengineered products or how to supply highquality service instead it is about maintaining a framework that will enable you to continually improve your product or service iso 9000 certification is about certifying the process to achieve certification it requires companies to submit documentation about information such as how you select your suppliers what information is included on your purchase orders what checks you make on incoming goods and what checks you make on outgoing items iso99 this certification is very different from p e professional engineers certification which is based on producing a well engineered product available tools techniques and metrics there are an abundance of verification and validation tools and techniques it is important that in selecting v  v tools all stages of the development cycle are covered for example table 1 lists the techniques used from the requirements analysis stage through the validation stage sources such as the software engineers reference book mc dermid 1992 standard for software component testing british computer society 1995 and standards such as do178b and iec 1508 are useful in selecting apprpriate tools and techniques table 1 use of testing methods throughout the development life cycle storey96static dynamic requirements analysis and functional specificationwalkthroughsdesign reviewschecklists toplevel designwalkthroughsdesign reviewschecklistsformal proofsfagan inspection detailed designwalkthroughsdesign reviewscontrol flow analysisdata flow analysissymbolic executionchecklistsfagan inspectionmetrics implementationstatic analysis functional testingboundary value analysisstructuredbased testingprobabilistic testingerror guessingprocess simulationerror seeding integration testingwalkthroughs functional testingdesign reviews time and memory testssneak circuit analysis boundary value analysisperformance testingstress testingprobabilistic testingerror guessing validationfunctional testing there are many organizations and companies that perform independent verification and validation for example nasa has a software independent verification  validation facility which provides iv  v technical analyses for nasa programs industries and other government agencies nasa99with all the work dealing with the y2k problem many y2k companies have embraced a new role as iv  v companies one such example is seec seec has an iv  v workbench which is a comprehensive integrated solution that includes year 2000 remediation the workbench brings together powerful tool and processes such as the seec cobol analyst 2000 and seec smart change 2000 for verification and the seec cobol slicer and seectest director for validation seec99relationship to other topics fault injection  fault injection is a validation technique requirements and specifications  validation is confirming that the specifications are consistent with the customers requirements standards  standards exist that define the software verification and validation process software safety  can verification and validation prove that the software is safe environmentemcemi  environmental testing can be considered a verification technique formal methods  formal methods is both a verification and validation technique software testing  many software testing techniques are used for verification safety critical systems analysis  hazard and risk analysis are validation techniques social and legal concerns  how does the certification process affect the legal responsibilities of a safetycritical systems developer conclusions in conclusion verification and validation is a crucial part of the development life cycle of an embedded system verification starts from the requirements analysis stage where design reviews and checklists are used to the validation stage where functional testing and environmental modelling is done the results of the v  v process is an important component in the safety case which is heavily used to support the certification process v  v is very important and an issue that comes up is how much verification is enough verification obviously the more testing the better but when do the benefits from testing outweigh the cost and time of the project this will vary from project to project and only the developer can determine this in addition v  v cannot be used to prove that a system is safe or dependable there are also several issues concerning the certification process the first issue is should artifacts be certified or the methodology certified the advantage of certifying the methodology is that it is applicable to different products so if the same methodology is applied to different products then each product does not need to be recertified the advantage of certifying the artifact is that if the methodology used to develop the artifact changes the product may not have to be recertified in addition certification does not prove correctness if a product receives certification it simply means that it has met all the requirements needed to be met for certification it does not mean that the product is error free therefore the manufacturer cannot use certification to avoid assuming its legal or moral obligations while verification validation and certification are important in the development of any system they are even more important in the development of safetycritical embedded systems tests such as those for electromagnetic compatibility prevent electronic systems from harmful interference with its surroundings which may include humans certification by the fcc also guarantees that products meet certain safety limits future work in this area includes the standardization of certification methods used in different industries currently these methods vary considerably therefore not only does this situation limit the exchange of information between different industries but it also limits the full use of the available human resources the design of iec 1508 has helped industries to not only maintain a common approach to safety but also the ability to still produce their own standards the use of formal methods in software certification is also a relatively new area and debate is still occuring as to whether formal methods can accurately verify and validate safetycritical embedded systems annotated reference list andriole86 andriole stephen j editor software validation verification testing and documentation princeton nj petrocelli books 1986 this book presents an overview of the software verification and validation process including the planning stage testing stage and documentation stage iso99 the iso information exchange httpwwwiso9000coukindexhtml  accessed may 7 1999 this website contains information about iso 9000 certification kopetz97 kopetz herman realtime systems design principles for distributed embedded applications boston ma kluwer academics publishers 1997 this book details the design of embedded realtime applications there is a chapter on validation techniques for realtime systems nasa99 nasa software independent verification  validation facility httpwwwivvnasagov accessed may 5 1999 an iv  v facility provided by nasa rtca92 rtcado178b software considerations in airborne systems and equipment certification december 1992 the standard used by the faa for software certification it includes details on testing procedures and necessary documentation rushby93 rushby john formal methods and the certification of critical systems sricsl technical report november 1993 this technical report includes 1 the technical basis for formal methods 2 the use of formal methods in the specification and verification of software and hardware requirements design and implementation 3 the benefits weaknesses and difficulties of applying formal methods to digital systems used in safety critical applications and 4 factors to consider when using formal methods in support of certification seec99 seec httpwwwseeccom  accessed may 5 1999 seec is a y2k company with an independent verification and validation product the iv  v workbench storey96 storey neil safety critical computer systems harlow england addisonwesley 1996 this book gives a good overview of safety critical computer systems without assuming previous knowledge of critical systems there is a good chapter detailing verification and validation during a product life cycle and also another chapter on certification in addition various other parts of the book describes particular verification and validation techniques further reading andriole stephen j editor software validation verification testing and documentation princeton nj petrocelli books 1986 this book presents an overview of the software verification and validation process including the planning stage testing stage and documentation stage neumann b de editor software certification london new york elsevier applied science 1986 this book contains a collection of papers dealing with the certification of computer software loose ends go to project page 