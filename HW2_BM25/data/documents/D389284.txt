joshua resnick  fotolia joshua resnick  fotolia manage data modeling techniques explained how to get the most from your databy hannah pullenblasnik editorial assistant in this interview author and data modeling instructor steve hoberman discusses techniques for dealing with challenges that may arise in the data modeling process this article covers data modeling related topicsbig data management dw appliances project management dw software data architecture hadoop looking for something else graph data model cements tight relationships between data elements rules of thumb on handling dba tasks from author craig mullins perspective and preparation data modeling concepts still vital in business technologiesdata center risk mitigation data modeling no sql databases software reverse engineering productsmongo dbrelated content following a notion for sql architect creates no sql – search data management no sql not only sql database– search data management key considerations for determining if a no sql dbms – search data management sponsored news innovating it while reducing legacy complexity with hpe simpli vity–hperadical simplicity and predictive flash storage performance in a scalable –hpesee more vendor resources taking control of no sql databases datadriven businesses must adopt a new data–erwin steve hoberman is the author of multiple books on data modeling techniques including his most recent data modeling for mongo db building welldesigned and supportable mongo db databases hoberman is also a prominent data modeling consultant and instructor who has educated more than 10000 people across five continents in this interview he explains common challenges that businesses face in creating data models and offers tips on data modeling techniques that can aid in the development of useful and accurate data models for operational and business intelligence applications including ones running on no sql databases such as mongo db how should businesses decide which of the various forms is most appropriate for their data models you mention it is based on the intended audience  can you expand on which models work for which audiences steve hoberman in data modeling for mongo db one of the key themes is for the modeler to be flexible on the visual form the model takes and sometimes it requires effort not to model with traditional data modeling notation when youre working with application development roles with data developer or database in their job titles it is okay to use traditional data modeling notation of boxes and lines such as information engineering notation eg the crows foot or unified modeling language for these roles i often use this notation consistently for all three levels of models  conceptual logical and physical steve hoberman for roles with business in their job title it is important to first gauge how comfortable this audience would be with the traditional data modeling notation sometimes this audience of business users business analysts etc already knows the traditional data modeling form or is anxious to learn it and sometimes its better to avoid this notation using instead a notation that they understand for example use spreadsheets as the modeling notation when working with financial business experts or sometimes even pictures of the concepts such as a picture of a warehouse that represents the concept of a warehouse procontent find more pro content and other member only offers here ezine security of big data fashions a whole new look with gdprehandbook data lake concept needs firm hand to pay big data dividends ezine slow to gain traction ai apps on the verge of explosion what are the biggest challenges that businesses face in creating a data model and what are your suggestions for avoiding or resolving them hoberman the biggest challenge is correctly capturing the requirements on the data model often when the project starts there are only vague requirements if requirements at all and the data model must represent these requirements completely and precisely therefore it is a very challenging task to go from ambiguity or vagueness to precision a lot of questions need to be asked and the results must be documented on the model this takes time and knowledge of which questions to ask and often projects lack the time as well as the expertise to answer these questions data modeling is the process of learning about the business and it is a timeconsuming and challenging process as different uses for modeling such as risk mitigation and reverse engineering gain popularity how does the role of a modeler change and adapt hoberman with reverse engineering instead of starting with a clean slate and driving the data models from new system requirements we organize attributes and rules according to how systems work today so the thought process and the deliverables are the same for new development as with reverse engineering but the starting points are different often with risk mitigation and reverse engineering we are playing the role of data archeologist using detective skills to determine the meaning of an existing system field and the fields relationships to other fields do you have any recommendations on how to establish precision when there is conflict over definitions and specifications hoberman there are a number of techniques that work well and ill briefly describe two i like best one modeler i know writes all of her own definitions and she writes these definitions with such precision that she knows they are all incorrect  then she gives them to the business to be corrected she finds it is easier for a business user to correct an existing definition than come up with a definition from scratch another modeler i know insists that development teams define the terms first before naming the term in order to name a concept we must know what it is so define it first and then name it both approaches are very effective for coming up with precise definitions what are the major differences in modeling with a relational versus a no sql database hoberman when the database is a relational database management system rdbms the database design often resembles the logical data model in terms of structure the areas where a rdbms database design differs from its logical data model are primarily due to modifications for performance or tool implications when the database is a no sql database however the database design can vary dramatically from the logical data model in terms of structure how does the schemaless or schema lite nature of no sql databases affect the data modeling process hoberman the no sql databases allow us to add new fields as we are adding the data called schemaless or schema lite and this allows us to more easily prototype and iteratively build the database prior to completing and sometimes even starting the data model in some efforts the database design is completed and then the logical and conceptual are built for documentation and support purposes so having a schemaless environment sometimes makes a bottomup approach starting from the physical possible by taking the time to create a data model what benefits might a business experience or what complications might they avoid hoberman the underlying benefit of creating a data model is that the data actually becomes understandable as others can read it and learn about it having this precise document that explains the data leads to tangible business benefits such as savings on developer and support costs and building higherquality systems that meet requirements and perform well next steps learn why data modeling concepts are important for business success in an excerpt from steve hobermans most recent book this was last published in july 2014dig deeper on data modeling tools and techniques all news get started evaluate manage problem solve google tpus open up on cloud linked in intros hadoop dynamometer graph data model cements tight relationships between data elements following a notion for sql architect creates no sql data modeling notationdata modeling load more