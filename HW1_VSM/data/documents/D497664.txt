hacking google finance in realtime for algorithmic traders 2 premarket trading may 7 2015 by pawel featured in data science weekly newsletter issue 76 may 7 2015it has been over a year since i posted hacking google finance in realtime for algorithmic traders article surprisingly it became the number one url of qa r that google has been displaying as a result to various queries and the number two most frequently read post thank you it’s my pleasure to provide quality content covering interesting topics that i find potentially useful you can be surprised how fast python solutions went forward facilitating life of quants and algo traders for instance yesterday haphazardly i found a code that seems to work equally well as compared to my first version and in fact is more flexible in data content that could be retrieved the idea stays the same as previously however our goal this time is to monitor changes of stock prices provided by google finance in realtime before the market opens constructing premarket priceseries the premarket trading session typically occurs between 800am and 930am edt each trading day though for some stocks we often observe frequent movements much earlier eg at 600am many investors and traders watch the premarket trading activity to judge the strength and direction of the market in anticipation for the regular trading session premarket trading activity generally has limited volume and liquidity and therefore large bidask spreads are common many retail brokers offer premarket trading but may limit the types of orders that can be used during the premarket period 1 in google finance the stock price in premarket is usually displayed right beneath the tricker for example the price of the stock here aapl varies depending on interest goodbad news etc in python we can fetch those changes i adopt a code found on the web in the following way1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25import urllib2  works fine with python 279 not 34import json import timedef fetch pre market  symbol exchange  link  httpfinancegooglecomfinanceinfoclientigqurl  link ss   exchange symbol u  urllib2 urlopen  url content  u read  data  json loads  content  3 info  data  0 t  str  info  elt  time stamp l  float  info  l  close price previous trading dayp  float  info  el  stock price in premarket afterhoursreturn  t l p p0  0while true  t l p  fetch pre market  aapl nasdaqif  p  p0  p0  p print  s t 2f t 2f t 2f t 2f   t l p pl  pl 1  100time sleep  60in this code we target google to get every 60 seconds an update of the premarket price line 14 what we retrieve is a json file of the form   id 22144 t  aapl e  nasdaq l  12580 lfix  12580 lcur  12580 s 1 ltt402pm edt lt  may 5 402pm edt ltdts  20150505t160228z c  290 cfix  290 cp  225 cpfix  225 ccol  chr pclsfix  1287 el 12610 elfix 12610 elcur 12610 elt  may 6 635am edt ec  030 ecfix  030 ecp  024 ecpfix  024 eccol  chg div  052 yld  165 eo   delay  op  12815 hi  12845 lo  12578 vo  2181200 avvo  4681m hi52  13454 lo52  8290 mc  74144b pe  1555 fwpe   beta  084 eps  809 shares  576b instown  62 name  apple inc type  company  you can download it individually if we execute in the browser a queryhttpwwwgooglecomfinanceinfoinfotypeinfoquoteallqnasdaq aaplsome of those information you can easily decipher for our task we need to get only el an asset price in premarket or afterhours trading aka extended hours trading elt corresponding time stamp and l most recent last price this is what our python code does for us in lines 1214 nice and smoothly when executed before 930am edt here for nasdaq aapl we may construct the premarket priceseries every time the price has been changed may 6 635am edt 12580 12618 038 030 may 6 642am edt 12580 12621 041 033 may 6 645am edt 12580 12616 036 029 may 6 646am edt 12580 12618 038 030 may 6 649am edt 12580 12610 030 024 may 6 651am edt 12580 12620 040 032 may 6 657am edt 12580 12613 033 026 may 6 700am edt 12580 12620 040 032 may 6 701am edt 12580 12613 033 026 may 6 707am edt 12580 12618 038 030 may 6 709am edt 12580 12620 040 032 may 6 710am edt 12580 12619 039 031 may 6 710am edt 12580 12622 042 033 may 6 712am edt 12580 12620 040 032 may 6 722am edt 12580 12627 047 037 may 6 728am edt 12580 12624 044 035  may 6 902am edt 12580 12669 089 071 may 6 903am edt 12580 12671 091 072 may 6 904am edt 12580 12673 093 074 may 6 908am edt 12580 12667 087 069 may 6 909am edt 12580 12669 089 071 may 6 910am edt 12580 12668 088 070 may 6 913am edt 12580 12667 087 069 may 6 914am edt 12580 12672 092 073 may 6 916am edt 12580 12674 094 075 may 6 917am edt 12580 12672 092 073 may 6 918am edt 12580 12670 090 072 may 6 919am edt 12580 12673 093 074 may 6 920am edt 12580 12675 095 076 may 6 921am edt 12580 12674 094 075 may 6 921am edt 12580 12679 099 079  may 6 923am edt 12580 12678 098 078 may 6 924am edt 12580 12671 091 072 may 6 925am edt 12580 12673 093 074 may 6 926am edt 12580 12675 095 076 may 6 927am edt 12580 12670 090 072 may 6 928am edt 12580 12675 095 076 may 6 929am edt 12580 12679 099 079since the prices in premarket tend to vary slowly 60 second time interval is sufficient to keep our eye on the stock you can compare a live result retrieved using our python code at 921am  with the above screenshot i took at the same time a simple joy of python in action enjoyhomework 1 the code fails after 930am est nyc time modify it to catch this exception 2 modify the code or write a new function that works after 930am edt 3 it is possible to get n  1 queries for n stocks by calling for example nasdaq aaplnyse jnj… in line 7 of the code modify the program to fetch premarket timeseries x i  t  i  1 … n for n asset portfolio given that compute a fractional rootmeansquare volatility σ x i  t  ⟨ x i  t ⟩ ie standard deviation divided by the mean between 6am and 930am edt for each asset and check can you use it as an indicator for stock price movement after 930am tip the higher frms the more trading is expected in first 15 min of a new session at wall street 4 modify the code to monitor afterhours trading till 430pm related postshacking google finance in realtime for algorithmic traders further reading chenoweth m 2011 downloading google intraday historical data with python network errororg 2013 google’s undocumented finance apireferences1 premarket investopediahttpwwwinvestopediacomtermsppremarketasp related hacking google finance in realtime for algorithmic traders january 14 2014in building a modelcreate a portfolio of stocks based on google finance data fed by quandl november 3 2013in data handlingcryptocurrencies with python apr 15march 6 2018in blockchain for financefiled under python for quants tagged with python timeseries 