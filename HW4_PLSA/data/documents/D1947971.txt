sql server 2005 column encryption demo part 2★ ★ ★ ★ ★★ ★ ★ ★★ ★ ★★ ★★laurentiu cristofor msft june 10 2005 16share 0 0i modified the last column encryption demo by protecting the encryption key with a certificate instead of using a password the advantage to this approach is that a password is no longer needed when opening the key the advantage of the password approach was the additional protection coming from the fact that only the user who knew the password could use the key in this version of the demo any dbowner can use the key goals of this demo  show how a column can be encrypted and decrypted without using passwords  the encryption key will be encrypted using a certificate instead of a passwordcreate database demouse demo create the database master key create master key encryption by password  pufds create a simple employee table create table temployees id int primary key name varchar 300 salary varbinary 300 create a certificate to protect the symmetric key that will encrypt the data  the certificate will be encrypted by the database master key create certificate certskadmin with subject  certificate for accessing symmetric keys  for use by admin  create a second certificate that will be used by another user charles to get access to the key create certificate certskcharles with subject  certificate for accessing symmetric keys  for use by charles create a key to protect the employee sensitive data in this case  the salary create symmetric key skemployees with algorithm  aes192 encryption by certificate certskadmin open the key so that we can use it open symmetric key skemployees decryption by certificate certskadmin verify key was opened select  from sysopenkeys add another encryption to the key using the certificate we created for charles alter symmetric key skemployees add encryption by certificate certskcharles check the catalog to see the list of certificates that encrypt our key select cname from syskeyencryptions ke syscertificates c syssymmetrickeys sk where kethumbprint  cthumbprint and skname  skemployees and kekeyid  sksymmetrickeyid insert some data  we will use the id as an authenticator value to tie the salary to the employee id insert into temployees values 101 alice smith encryptbykey keyguid skemployees 200000 1 101 insert into temployees values 102 bob jones encryptbykey keyguid skemployees 100000 1 102 see the result salary is encrypted select  from temployees create a view to automatically do the decryption  note that when decrypting we specify that the id should be used as authenticator create view vemployees as select id name convert varchar 10 decryptbykey salary 1 convert varchar 30 id as salary from temployees create another view for charles that will automatically open the key using his certificate and do the decryption create view vemployeesauto as select id name convert varchar 10 decryptbykeyautocert certid certskcharles null salary 1 convert varchar 30 id as salary from temployees see the result the decrypted data is available select  from vemployees now close the key close all symmetric keys verify key was closed select  from sysopenkeys use the view that will automatically open the key select  from vemployeesauto note that the key is also automatically closed by the above query  it is only opened for the duration of the query select  from sysopenkeys also note that if the key is not opened the vemployees view will not be able to decrypt the data select  from vemployees create a login and user for charles create login charles with password  pufds create user charles grant control on the certificate to charles grant control on certificatecertskcharles to charles grant view definition on symmetric keyskemployees to charles grant select on vemployees to charles grant select on vemployeesauto to charles impersonate charles execute as login  charles verify context select susersname  select username  select from view that will open the key select  from vemployeesauto open key open symmetric key skemployees decryption by certificate certskcharles now we can use the vemployees view as well select  from vemployees close key close all symmetric keys revert impersonation of charles revert if we ever want to prevent charles from accessing the data  we can just remove the encryption of the symmetric key  and revoke view definition on the key  any of these is sufficient but doing both is a better cleanup  charles may continue to use the certificate for other purposes  maybe to access some other key open symmetric key skemployees decryption by certificate certskadmin alter symmetric key skemployees drop encryption by certificate certskcharles close symmetric key skemployees revoke view definition on symmetric keyskemployees to charles  we can also revoke permission to access the views if we dont want charles to use them anymore revoke select on vemployees to charles revoke select on vemployeesauto to charles cleanup drop user charles drop login charles drop view vemployees drop view vemployeesauto delete from temployees drop table temployees drop symmetric key skemployees drop certificate certskcharles drop certificate certskadminuse masterdrop database demo  eodtags computer security encryption sql server sql server  cryptography