truncate table transactsqlaugust 10 2017 4 minutes to read contributors in this article syntax arguments remarks restrictions truncating large tables permissions examples see also this topic applies to sql server starting with 2008 azure sql database azure sql data warehouse parallel data warehouse removes all rows from a table or specified partitions of a table without logging the individual row deletions truncate table is similar to the delete statement with no where clause however truncate table is faster and uses fewer system and transaction log resources transactsql syntax conventions syntax syntax for sql server and azure sql database truncate table   databasename   schemaname    schemaname    tablename  with  partitions   partitionnumberexpression  range    n        range  partitionnumberexpression to partitionnumberexpression syntax for azure sql data warehouse and parallel data warehouse truncate table   databasename   schemaname    schemaname   tablename argumentsdatabasename is the name of the databaseschemaname is the name of the schema to which the table belongstablename is the name of the table to truncate or from which all rows are removed tablename must be a literal tablename cannot be the objectid  function or a variable with  partitions    partitionnumberexpression    range     n    applies to sql server  sql server 2016 13x through current versionspecifies the partitions to truncate or from which all rows are removed if the table is not partitioned the with partitions argument will generate an error if the with partitions clause is not provided the entire table will be truncatedpartitionnumberexpression can be specified in the following ways provide the number of a partition for example with partitions 2provide the partition numbers for several individual partitions separated by commas for example with partitions 1 5provide both ranges and individual partitions for example with partitions 2 4 6 to 8range can be specified as partition numbers separated by the word to for example with partitions 6 to 8to truncate a partitioned table the table and indexes must be aligned partitioned on the same partition function remarks compared to the delete statement truncate table has the following advantages less transaction log space is used the delete statement removes rows one at a time and records an entry in the transaction log for each deleted row truncate table removes the data by deallocating the data pages used to store the table data and records only the page deallocations in the transaction log fewer locks are typically used when the delete statement is executed using a row lock each row in the table is locked for deletion truncate table always locks the table including a schema schm lock and page but not each row without exception zero pages are left in the table after a delete statement is executed the table can still contain empty pages for example empty pages in a heap cannot be deallocated without at least an exclusive lckmx table lock if the delete operation does not use a table lock the table heap will contain many empty pages for indexes the delete operation can leave empty pages behind although these pages will be deallocated quickly by a background cleanup process truncate table removes all rows from a table but the table structure and its columns constraints indexes and so on remain to remove the table definition in addition to its data use the drop table statement if the table contains an identity column the counter for that column is reset to the seed value defined for the column if no seed was defined the default value 1 is used to retain the identity counter use delete instead restrictions you cannot use truncate table on tables that are referenced by a foreign key constraint you can truncate a table that has a foreign key that references itself participate in an indexed view are published by using transactional replication or merge replication for tables with one or more of these characteristics use the delete statement instead truncate table cannot activate a trigger because the operation does not log individual row deletions for more information see create trigger transactsql in azure sql data warehouse and parallel data warehouse truncate table is not allowed within the explain statement truncate table cannot be ran inside of a transaction truncating large tables microsoft sql server has the ability to drop or truncate tables that have more than 128 extents without holding simultaneous locks on all the extents required for the drop permissions the minimum permission required is alter on tablename truncate table permissions default to the table owner members of the sysadmin fixed server role and the dbowner and dbddladmin fixed database roles and are not transferable however you can incorporate the truncate table statement within a module such as a stored procedure and grant appropriate permissions to the module using the execute as clause examples a truncate a table the following example removes all data from the job candidate table select statements are included before and after the truncate table statement to compare results use adventure works2012 go select count  as before truncate count from human resources job candidate go truncate table human resources job candidate go select count  as after truncate count from human resources job candidate gob truncate table partitions applies to sql server  sql server 2016 13x through current versionthe following example truncates specified partitions of a partitioned table the with partitions 2 4 6 to 8 syntax causes partition numbers 2 4 6 7 and 8 to be truncated truncate table partition table1 with partitions 2 4 6 to 8 gosee also delete transactsqldrop table transactsqlidentity property transactsqlnote the feedback system for this content will be changing soon old comments will not be carried over if content within a comment thread is important to you please save a copy for more information on the upcoming change we invite you to read our blog post