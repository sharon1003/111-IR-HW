chapter contents revised january 22 1010 ol1277814revision history for this chapter date change made july 10 2007modified call detail data queries section per updated 50 billing spec may 24 2007modified command for enabling cdbbased billing subsystem march 29 2007modified secured ftp support for billing procedures per cscsi13664february 28 2007modified p 13 per cscsh84168 this chapter describes the cisco bts 10200 softswitch billing operational procedures the following sections provide detailed information on how to manage and control accounting information generated by the bts 10200 actual examples are provided with explanations to illustrate the operational mechanics these and other commands are documented in the cisco bts 10200 softswitch release command line interface reference guide and the cisco bts 10200 softswitch release operations and troubleshooting guide note this guide deals exclusively with the call detail block cdb based billing subsystem for information on the event message em based billing system used in packet cable environments please refer to the cisco bts 10200 softswitch packet cable feature guide caution manual manipulation of billing files can cause billing to fail contact cisco for assistance before manually manipulating any billing file including clean up call data transport management call detail blocks cdbs are produced from the current information sent from the billing generator in the call agent ca to the billing manager in the element management system ems each billing event message bem that is issued by a call in progress is stored in a staging area in the billing generator waiting for call completion the billing generator determines that a call is in a completed state when a signal stop is detected for the call after that the system waits for quality of service qo s metrics but it does not wait longer than five seconds once this has occurred the billing generator is triggered to send all data associated with that call to the billing manager the bts 10200 stores the raw cdbs in flat ascii files on the persistent store associated with the bulk data management system bdms the bts 10200 stores from 10 megabytes to 5 gigabytes of billing records in a flat disk partition that is userdefinable with respect to size with the default set at 1 gigabyte this data is subsequently sent to the specified remote accounting office or billing server or mediation device using the file transfer protocol ftp as shown in figure 11 figure 11 billing database redundancy configuration the bts 10200 provides command line interface cli commands to manage the collection and delivery of the accounting information generated the user must first ensure that the call detail block cdb based billing subsystem is enabled in the callagentprofile entry for that call agent the following command enables cdbbased billingchange callagentprofile idca146 cdbbillingsuppy embillingsuppncaution the packet cable event message em report value must be disabled when the cbdbased reports value is enabled as shown in the above command example refer to file naming conventions for additional information the billingacctaddress command provides the ability to specify how the billing data files are named where to the send the files to in the network the directory to place the files into at the destination node the username and password to use for access to the destination node and the interval to send the data the show command displays the current settings for the billingacctaddress as shown here cli show billingacctaddr billingdirectory  optbmsftpbilling billingfileprefix  bil billingserverdirectory  devnull pollinginterval  15reply  success request was successful the following is an example of the command used to modify the billingacctaddress parameters to setup the ftp transport parameters cli change billingacctaddr billingfileprefixcalldetaildata billingserverdirectoryimportbillingftpinbound billingserveraddrraocustomercom usernamecustomer001 passwordtest pollinginterval15billingfilenametypedefaultsftpsuppnthe following is a list of the command line tokens associated with this command and the valid values and purpose of each• billingdirectory—an optional ascii string from 1 to 64 characters in length this string specifies the directory path on the ems where the accounting information is stored prior to being sent to the remote mediation system or accounting office via ftp the default value for this token is optbmsftpbilling this option is not available for this release• billingfileprefix —an optional ascii string from 1 to 20 characters in length that defaults to bil this string is appended to the front of each file sent to the remote mediation system or accounting office via ftp the files are uniquely identified by appending a timestamp to the end of each filename the actual name of the files is in the following format billingfileprefixyyyymmddhhmmssprielementidsequencenumberascii• billingserverdirectory —an optional ascii character string from 1 to 64 characters in length this string specifies the directory path on the remote mediation system or accounting office to which the accounting information is sent via ftp the default value for this token is devnull if a billingserverdirectory is specified the following three tokens are mandatory if not then they are optional– billingserveraddr —an ascii character string from 1 to 64 characters in length this string specifies the ip address or dns domain name of the remote mediation system or accounting office to which the accounting information is sent via ftp– username —an ascii character string from 1 to 32 characters in length this string specifies the ftp login name to use to access the remote mediation system or accounting office– password —an ascii character string from 1 to 32 characters in length this string specifies the ftp password to use to access the remote mediation system or accounting office• pollinginterval —an optional token with a valid range from 1 minute to 60 minutes this token specifies the time in minutes between the ftp file transfers from the cisco bts 10200 element management system and the remote mediation system or accounting office the default value is 15 minutes the cdr files size takes precedence over the pollinginterval parameter note the cdr files size take precedence over the pollinginterval parameter if there are not enough records to satisfy the size requirements then the cdr push is delayed there is a separate billing alarm configuration for this• depositconfirmationfile— this flag denotes whether or not an explicit confirmation file is sent after each cdb file is transferred to the remote billing collection system if this feature is enabled an empty file with the same name with a suffix of done is appended to the end of the file the valid choices are y and n with n as the default• billingfilenametype —this parameter determines which file naming format to use for the cdr files created on the system any changes to this value take effect only when the bdms platform is restarted the value of installed indicates that the value established at sysetm installation should be used the valid choices are installed packetcable and nonpacketcable the default is set to installed• sftpsupp  this is a boolean flag indicating that the sftp protocol is supported for the billing file transfer this flag has either y for yes or n for no the default value is n which means the sftp transfer is disabled if there is any problem transferring the accounting data to the remote mediation system or accounting office the element management system ems issues a billing 6 or billing 33 event report this is an indication that billing data is available for transfer but transport is unable to ftp the data to the proper destination use of the above commands is the correct place to start diagnosis of this situation figure 12 the cdb process secured ftp support for billing interface as of release 45 the cisco bts 10200 supports secured ftp sftp in billing traffic and has a new flag sftpsuppn before you can enable sftp the cisco bts 10200 and bms must be configured to allow noninteractive ssh login as described below however once noninteractive ssh login has been set up you must enable sftp thereby disabling ftp by executing the cli command change billingacctaddr sftpsuppy the billing 6 and billing 33 alarms changed in release 44 the billing 6 failed to make ftp transfer and billing 33 billing ftp parameters invalid alarm definitions have been modified to read failed to make ftpsftp transfer and billing ftpsftp parameters invalid respectively as of release 45 the security keys must be manually built in during the installation setup the following procedure describes how to do the following• generating a publicprivate key pair on ems• setting up a public key on the bms• verifying public key authentication note for sftp to work manually configure cisco bts 10200 and bms to allow noninteractive ssh login generating a publicprivate key pair on emsstep 1 log in to the cisco bts 10200 primary ems as root step 2 create the ssh directory to store the keysa execute cd b execute mkdir sshc execute chmod 700 ssh step 3 generate publicprivate key paira execute cd sshb execute optbtsosshbinsshkeygen t rsac hit enter to accept the default file name for the key sshidrsad enter y if prompted to choose whether to overwrite the existing filee hit enter when prompted to enter a passphrase no passphrase step 4 transfer the resulting file sshidrsapub to a temporary location on the bmsoptbtsosshbinsftp usernamebmsserveripstep 5 repeat steps 1 through 4 to create a publicprivate key pair on the secondary ems setting up a public key on the bmsstep 1 login to the bmsssh usernamebmsserveripstep 2 move the public key to a unique name execute mv idrsapub idrsa priemspub step 3 create the ssh directory to store the public keya execute mkdir sshb execute chmod 700 sshc execute cat idrsa priemspubsshauthorizedkeysd execute chmod 600 sshauthorizedkeyse execute rm idrsa priemspub this command is optional step 4 log out of the bms execute exit step 5 repeat steps 1 through 4 to set up a public key for the secondary bms verifying public key authentication step 1 logon to the primary ems step 2 execute ssh usernameabcd where abcd is the ip address or fully qualified domain name of the bms step 3 verify that the login to the bms is successful and that the system issues no prompts for username or password the billing 6 and billing 33 alarms changed in release 44 the billing 6 failed to make ftp transfer and billing 33 billing ftp parameters invalid alarm definitions have been modified to read failed to make ftpsftp transfer and billing ftpsftp parameters invalid respectively release 45 allows for using secured ftp s ftp in billing traffic and included a new flag sftpsuppn before you can enable sftp the cisco bts 10200 and bms must be configured to allow noninteractive ssh login as described below however once noninteractive ssh login has been set up you must enable sftp thereby disabling ftp by executing the cli command change billingacctaddr sftpsuppy also worth noting in release 45 is that during initial set up the security keys must be manually built in to set up the public and private keys for the connection between the cisco bts 10200 softswitch and a mediation device complete the following steps for s ftp to work manually configure cisco bts 10200 and bms to allow noninteractive ssh login sftp troubleshooting information when sftp is configured for billing file transfer by set cmd argsftpsuppno cmd arg to y billing files can not be sent to an external sftp server the bdms log shows following messageerror reading from sftp server broken pipe the impact is that the billing file delivery to an external sftp server does not work this is due to a bug in open ssh 39p1 that causes ssh connection failure if the user root initiates the connection with a group id other than what is defined in the etcpasswd file this seems to happen if1 ssh client is open ssh39p1 and2 bdms platform is started for first time with a fresh load the workaround is to1 upgrade open ssh to version 41p1 or above or2 try performing platform stop i bdms01 and platform start i bdms01 to restart bdms if file transferring over sftp still fails after bdms restart use ftp instead of sftp for billing file transfer file naming conventions cisco bts 10200 supports two different billing record file naming conventions packet cable and nonpacket cable  npc  the user can specify the format by setting the billingfilename token in the billingacctaddr table the default format is npc note beginning with release 50 the opticallcfg billingfilename parameter is not considered and is marked for obsolescence default setting files npc is the default naming convention and generates files in the following formatbillingfileprefixcallagentid 01 hhmmssyyyymmddhhmmsssequencenumberstate where• billingfileprefix is the billing file prefix from the billingacctaddr table• callagentid is the call agent id from the callagent table• 01 daylight saving time on  1 off  0• hhmmss is the utc offset time• yyyymmddhhmmss is the local time the file was created• sequencenumber is a monotonically increasing 6digit number from 000001 to 999999 that will roll over to 000001 after the maximum 999999 is reached• state is a letter indicating the state of the file where p indicates primary data complete file but untransferred s indicates secondary data complete file and transferred and o indicates open current open file that is incomplete and untransferredthe following is an example from a billing file with the state value at the end of the linerwrr1 root other 59 dec 6 0614 tb101ca146006000020061206051420000167srwrr1 root other 59 dec 6 0714 tb101ca146006000020061206061420000168srwrr1 root other 59 dec 6 0814 tb101ca146006000020061206071420000169srwrr1 root other 59 dec 6 0914 tb101ca146006000020061206081420000170prwrr1 root other 36 dec 6 0914 tb101ca146006000020061206091420000171opacket cable setting files the packet cable setting generates files in the following formatbillingfileprefixyyyymmddhhmmsspriorityrecordtypecmsidsequencenumbera scii tmpwhere• billingfileprefix is the billing file prefix from the billingacctaddr table• yyyymmddhhmmss is the time the file was created• priority is the default priority of the file—this value is hard coded to 3 for release 45• recordtype is a binary flag indicating the state of the file where– 0 indicates the file has not been transferred– 1 indicates that the file has been transferred off board• cmsid is the cms id from the callagentprofile table• sequencenumber is a monotonically increasing 6 digit number from 000001 to 999999 that rolls over to 000001 after the maximum number of 999999 is reached• tmp is an optional temporary extension of tmp that indicates the file is the currently open file for writing files ending in tmp are not transferred to the off board billing collection system call data alarm management the bts 10200 billing manager bmg process in the ems tracks the total number of records the billing database can store the number of unacknowledged records and the current percentage of the database that is occupied by unacknowledged records this information is then compared against the threshold levels set in the billing alarm database if the current amount of billing data in the database exceeds thresholds then the billing manager issues alarms the billing manager resets the alarms when the storage levels drop below the specified thresholds note in release 450 the billing requires a minimum file size of 32 bytes at system startup billing goes through the list of existing billing files if any has a size less than 32 bytes billing fails to start you will see the errors similar to the following error 214833858 bmg main thr billing file size is too small optbmsftpbillingtb71ca146200509151723300pbmginitc660 error 214833858 bmg main thr minimum file size is 32 bytesbmginitc661 error 214833858 bmg main thr bad files need to be removed before restartbmginitc662 the corrective action is to remove this bad filling file and restart however this is not the case with releases 451 and 4513 in those releases the bmg succeeds and deletes those files less than 32 bytes the bts 10200 provides cli user commands to manage the thresholds at which alarms are issued pertaining to billing data overwrite scenarios these commands provide the ability to specify to what levels the billing partition is filled before issuing an alarm of the appropriate level the following is an example of the show billingalarm command and the response that displays the current settings for billing alarms cli show billingalarm minorthresh  70majorthresh  80criticalthresh  90maximumspace  1000maximumsize  2maximumrecord  1000maximumtime  3600regularspace  60reply  success request was successful the following is an example of the change billingalarm command used to set the threshold levels at which billing alarms are issuedchange billingalarm minorthresh75 majorthresh85 criticalthresh95 maximumspace2000 maximumsize2 maximumrecord3000 maximumtime30 regularspace70the following is a list of the command line tokens associated with this command and the valid values and purpose of each• minorthresh —an optional percentage from 2 percent to 97 percent with a default value of 70 percent that represents an initial billing database usage threshold when this specified percentage of the billing database is consumed by billing records that have not been written into ascii batch files a minor alarm is issued the value of this token must be less than that of the majorthresh token• majorthresh —an optional percentage from 3 percent to 98 percent with a default value of 80 percent that represents an intermediate billing database usage threshold when this specified percentage of the billing database is consumed by billing records that have not been written into ascii batch files a major alarm is issued the value of this token must be less than that of the criticalthresh token• criticalthresh —an optional token with a percentage from 4 percent to 99 percent with a default value of 90 percent that represents a final billing database usage threshold when this specified percentage of the billing database is consumed by billing records that have not been written into ascii batch files a critical alarm is issued• maximumspace —an optional token that specifies the allocated storage capacity for billing data in megabytes this tokens value can range from 10 mb to 5 gb and has a default value of 1 gb• maximumsize —an optional token that specifies the maximum size of a cdb flat file in megabytes this tokens value can range from 1 mb to 10 mb and has a default value of 2 mb• maximumrecord —an optional token that specifies the maximum number of records to be stored in a given flat file this tokens value can range from 500 records to 10000 records and has a default value of 1000 records• maximumtime —an optional token that specifies the maximum number of seconds a given flat file can remain open for addition of new records this tokens value can range from 10 seconds to 3600 seconds and has a default value of 3600 seconds 1 hour• regularspace —an optional token that specifies the real time capacity used as a percentage of the available capacity before secondary files are deleted this tokens value can range from 1 percent to 90 percent and has a default value of 60 percent the value of this token must be less than the value for minorthresh if there is a problem creating the ascii accounting information files the ems will issue billing 14 billing 15 or billing 52 event reports this is an indication that ascii accounting data files cannot be created and stored on disk in the ems in these cases verify that the alarm threshold levels are not set too low and that there is sufficient storage area available on the ems to hold the ftp files use of the above commands is the appropriate place to start diagnosis of this situation no visible billing records the bts 10200 ems stops generating billing records when a certain limit is reached one limit is for the maximumspace parameter described in the previous section when the total size of the billing files exceeds the disk space specified in maximumspace no new billing records are created on the ems another hard limit is a maximum of 10000 billing files on ems to continue receiving billing records users can reduce the disk space occupied by the billing files or reduce the number of billing files the disk space andor the number of billing files may be increasing because the billing files were not properly transferred to the mediation server the sftp or ftp connection failure for example the server ip address not correct sftp not configured correctly etc results in billing files being backed up on the ems where they will either eventually reach either the maximumspace limit or the 10000 files limit in this scenario check the billing transport set up by using the change billingacctaddr command removing billing files billing files are system files and should not be modified such as renaming or removing files except by the system administrator the system administrator should set up proper permission on the billing storage directory and billing files to avoid billing info being compromised if for some reason the billing files must be moved or removed due to disk space alarms for example follow these steps1 perform a switchover of the bdms2 platform stop the newlystandby bdms3 move the billing files in question4 platform start the bdms5 repeat steps 14 on the pair node if necessary call file management the bts 10200 provides a command line interface that allows you to view lists of billing files on the bulk data management system bdms platform at any given time the names of the available files and their operational status can be queried using the commands described the following report billingfile command examples allow you to query the bdms for billing files and their associated information• report billingfile filename —displays all file names stored in optbmsftpbilling depending on the number of files stored this command might take awhile to complete• report billingfile filenamexxx —displays the filename specified as well as the current state of the file• report billingfile statexxx— displays all filenames that are in the state entered by the user the following is a list of the command line tokens associated with this command and the valid values and purpose of each• filename —name of the billing file to report if the file name entered does not exist the user is notified that the file does not exist currently• state —current state of a given file the valid states are– open—file is currently being written to– primary—file has not been sent to or acknowledged by the external billing mediation system– secondary—file has been sent to and acknowledged by the external billing mediation system• startrow —row to start displaying from in the returned result set the default value is 1• limit —maximum number of rows to display from the returned result set the default value is 50• display —data columns to display from the ones supported by this command the default is to display all available columns• order —column that the display is to be ordered by from the returned result set• autorefresh —specifies whether a new result set is to be created or the existing result set is to be used if one is available the default value is y use the existing result set call detail data queries the bts 10200 provides a command line interface to query cdb records from the ascii flat files stored in optbmsftpbilling on the ems this mechanism provides the ability to specify record s to display based on the supplied information the following is an example of the command line for searching based on a time intervalreport billingrecord starttime20040327 120000000 endtime20040327 120500000 orignumber9726712355the example shown above scans the ascii flat files on the ems for any call detail records that match the supplied criteria each record written between 120000 and 120500 on the 27th of march 2004 with a originating number field containing 9726712355 would be displayed to the user the following is an example of the command line for searching based on a specified filereport billingrecord filenamebilca120000327120000 orignumber9726712355the example shown above scans the ascii flat files on the ems for any call detail records that match the supplied criteria each record written to the file bilca120000327120000 with a originating number field containing 9726712355 would be displayed to the user the user can also use this command with no filename or time interval specified in this case the system displays the most recently written call record the following is an example of the command line syntax to request that the most recently written record be displayed effectively a tail1 commandreport billingrecord if a query is entered and no filename or time interval is specified but a search qualifier is entered such as call type—the query is performed over the most recently written filename there are several types of searches that can be performed using this query the billing files can be searched based on filename start and stop times or the most recently written file these searches can be further refined by specifying the call type orig number term number service type termination cause or tail parameter only one of these refinement parameters can be used at a time the following is a list of the search types that can be performed• filename —by specifying the actual file name of a group of records those records can be searched based on the other search qualifiers supplied• time interval —the start and stop times can be specified and all records written within that time period are displayed this query can be further qualified by combining it with the call type or term number or orig number or service type or termination cause queries• call type —the type of call is specified so that all records within the database that match this type are displayed to the user• service type —the type of service to search for within a call record s is specified and all records within the database that match this service type are displayed to the user• termination cause —the type of call termination cause is specified and all records within the database that match this termination cause are displayed to the user• term number —each record that contains an exact match with the called number field in the database to the specified directory number is displayed to the user• orig number —each record that contains an exact match with the calling number field in the database to the specified directory number is displayed to the user• tail —this query type displays the specified number of records most recently written to the billing database the valid values range from 1 to 50 when this token is used the most recently written record are searched any cdb files that do not contain actual cdb records are skipped the following section describes the command line tokens associated with the report billingrecord command and their valid values and purpose note the time in the command report billingrecord starttimexxxxendtimexxxx is gmt time• starttime —a time stamp value in the format of yyyymmdd hh mm ssmmm this value indicates the starting time to filter against in the search for when billing records were written to the database this is an optional token that has no default value if the milliseconds portion of the time stamp is omitted a value of 000 is implied• endtime —a time stamp value in the format of yyyymmdd hh mm ssmmm if the milliseconds portion of the time stamp is omitted a value of 000 is implied this value indicates the stopping time to filter against in the search for when billing records were written to the database this is an optional token that has no default value• termcause —an ascii character string specifying the call termination cause to filter against in the billing database the valid values for this token are aalparamnotsupportedaccessinfodiscardedaccountlimitexceededauditreleasebearercapabincompatwithservicebearercapabilitynotimplementedbearercapabilityunavailablecallawardedcallproceedingcallrejectedcallrestrictedwithclircallednumberportedoutchanneldoesnotexisitchannelunacceptablechannelunavailablecircuitchannelcongesteddestinationoutoforderexcessdigitrecdfacilitynotimplementedfacilitynotsubscribedfacilityrejectedincompatibledestinationincorrectmessagelengthinfoelementnonexistentinternetworkingerrorunspecifiedinvalidcallreferenceinvalidendpointreferenceinvalidinfoelementinvalidnumberformatinvalidtransitnetwselectionmandatoryinfoelementmissingmessageincompatwithcallstatemessagetypenonexistentmisroutedportednecauseauditreleasenetworkoutofordernoroutedestinationnoroutetransitnetworknovpcivciavailablenormalcallclearingnormalunspecifiednumberchangedonedialedinerroronenotdialedprotocolerrorthresholdxceededprotocolerrorunspecifiedqosunavailableresourceunavailableresponsestaticenqmsgservicedeniedservicenotimplementedserviceoperationviolatedserviceunspecifiedsessiontimerrefreshtimeoutswitchequipcongestedtemporaryfailuretimerexpiryrecoverytoomanypendingaddpartyrequnauthorizedbearercapabilityunassignednumberunsupportedtrafficparamsuseralertednoansweruserbusyusercellrateunavailableusernotrespondingvacantcodevpcivciassignmentfailvpcivcinotavailablezerodialedinerror• calltype —an ascii character string specifying the type of call record to filter against in the billing database the valid values for this token are the same as those listed for the billingcdb command  in release 45 it is possible to provision the destination table with any one of the following• calltypeemg• calltypeambulance• calltypefire• calltypepolicealternatively it is possible to provision the following one pair per destid• calltypeemg callsubtypeambulance• calltypeemg callsubtypefire• calltypeemg callsubtypepolice• calltypeemg callsubtypenone defaultfor service providers in the u s it is typical to provision the destination table with calltypeemg for the digit string 911 and callsubtypenone default because 911 is a central dispatch point for all emergency ambulance fire and police calls caution on the bts 10200 to consider a call an emergency it must be provisioned as calltype emg if using separate dns for ambulance fire and police service typically applies to networks outside the u s a  cisco strongly recommends that you provision these as calltype emg and callsubtype ambulance or fire or police in the destination table this is the only way to be sure they are given all the treatment of the emg calltype• termnumber —an ascii character string that is 4 characters to 15 characters long this value indicates the actual called party directory number to filter against in the billing database this is an optional token that has no default value• orignumber —an ascii character string that is 4 characters to 15 characters long this value indicates the actual calling party directory number to filter against in the billing database this is an optional token that has no default value• tail —a decimal value from 1 to 50 this value indicates the number of most recently written records to query this is an optional token that has no default value• servicetype —an ascii character string specifying the type of service to filter against in the billing database the valid values for this token are911 handlingaccount codeain handlinganonymous call rejectionauthorization codeauto recallautomatic callbackbusy line verificationcallblockcall forward busycall forward combinationcall forward no answercall forward redirectcall forward unconditionalcall holdcall parkcall park reofferedcall park retrievalcall transfercall waitingcall waiting deluxecall waiting with caller identitycalling id delivery block permanentcalling identity delivery suppressioncalling name deliverycalling name delivery blockingcalling number deliverycalling number delivery blockcancelled call waitingclass of servicecnam scp querycustom dialing plancustomer originated tracedirected call pickup with barge indirected call pickup without barge indo not disturbdrcwhotlinehotline variablelcd prepaidlcd postpaidlimited call duration—prepaidlimited call duration—postpaidlnpmultiple directory numberno solicitation announcementoff hook triggeroutgoing call barringprivacy screeningreject callerremote activation of call forwardingremote activation of call forwarding pinrepeat callreturn callscreening list edit drcwscreening list edit scascreening list edit scfscreening list edit scrselective call acceptanceselective call forwardingselective call rejectionserivce feature group incomingservice feaure group outgoingsip offhook triggersip refersip replacesip termination attempt triggerspeed callingtermination attempt triggerthree way callthree way call deluxetoll freeuser sensitive three way callvoice mailvoice mail accesswakeup call release 451warmlinecall data provisioning the bts 10200 provides a command line interface to manage the types of call detail records generated this mechanism provides the ability to specify which call detail block types are generated by the system on a percalltype basis when the system is installed all cdb types are enabled by default the following is an example of the show billingcdb command to display the current enabledisable setting for billing cdbs for a specific call type clishow billingcdb typelrntypelrnenableyreply  success request was successful the following is an example of the change billingcdb command to enable local billingchange billingcdb typelocal enableythe command line tokens associated with the show billingcdb command and their valid values and purpose are as follows• type —an ascii character string specifying the type of call record to provision this is a mandatory token with no default value the valid values for this token are the same as those listed in the previous section for the report billingrecord command• enable —an ascii character y or n this string specifies whether the specified cdb type should be enabled or disable for generation this is an optional token with a default value of y caution for usepaihdrforani token the usepaihdrforani token in the softswitch trunk group profile controls the passertedid paid header used to send and receive calling party information with the usepaihdrforani token set to y the calling party information is derived exclusively from the paid header on inbound calls so when a sip invite arrives at the bts 10200 without paid header the cisco bts 10200 treats the call as though it does not have a calling party number for the billing record the following is recorded for such a call orignumber  null emptychargenumber  null emptyorigcallingname  out of areathe bts 10200 records the user part of the from header in originatingsipusername field of the billing record note customer originated trace cot 57 does not work with usepaihdrforaniy and the incoming sip invite does not have the paid header for more information about using usepaihdrforaniy or about which other featuresfunctions may not work properly because of usepaihdrforaniy and the incoming sip invite not having the paid header contact your cisco representative 