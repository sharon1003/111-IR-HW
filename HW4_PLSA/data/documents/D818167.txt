improve your sql server knowledge daily with more articles by email sign up thank this author by sharing rate this join the discussion add to briefcase how to find sql server objects by ashish kaushal 20040817how many times we as a sql developer or dba find ourselves shuffling through objects in enterprise manager or expanding the left pane of query analyzer trying to find a table or view for which we have no clue except a nearly correct name and the only way we would know that it is the right object is looking at its meta data or text well it might not be an every day kind of thing but it does happen from time to time or perhaps not in an idealistic situation where all databases are well documented and all names follow a well defined naming convention with no exceptions and most of all the employees never quit a better why to find a sql server object such as a table a procedure or a trigger would be to query the sysobjects system table in the local database of course one has to be certain about which database that object is supposed be in for example select  from sysobjects where name like ‘client invoice’ script i executing the above query displays all the objects in current database whose name starts with client invoice if the type of the object to be searched is known then the query can be changed to provide only that type of object whose name start with client invoice this might return a much smaller and more readable resultset for example select  from sysobjects where xtype  ‘u’ and name like ‘client invoice’  ‘u’ for user table script ii the main shortcoming of above methods is that the sysobjects table is database specific if one does not know which database contains the object then the above query has to be run in all the databases to find the object is there an easier way to write a query which searches all the databases in a single step to locate a specific object andor of a specific object type the answer is yes by using the handy spmsforeachdb procedure for example exec spmsforeachdb select  from sysobjects where xtype u and name like client invoice  script iii spmsforeachdb is an undocumented also means unsupported procedure available in both sql server 7 and sql server 2000 it takes one string argument which in our case is same as script ii but there is one important difference if we look carefully at script iii it has “from sysobjects” instead of simply “from sysobjects” as in script ii why  this is important because spmsforeachdb uses dynamic sql internally and “” is the placeholder for the name of the database it keep substituting “” with the name of each database as it loops through all the database names thereby accessing the sysobjects table in each database in a cycle in sequence suppose if there are n databases if we do not supply “” than spmsforeachdb ofcourse loop through the n databases but keep accessing sysobjects table of the current database that is the database we are running this query in ntimes now that we know “” is the placeholder for the name of database why not try to write a script which could provide a result set with name of database name of object and type of object  part 1declare sqlstr nvarchar 200  part 2  drop the temporary table if already exists  if objectid ‘tempdbtbl dbobjects is not null drop table tbl dbobjects  create temporary table  create table tbl dbobjects  db name sysname obj name varchar 200 objtype char 2   part 3 assign string value to variable  select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects  execute sql string  exec spexecutesql sqlstr  part 4  select from temp table  select  from tbl dbobjects where name like ‘client invoice’ return script ivexplanation of the above script part 1 of the script simply declares variable with the nvarchar datatype this is because the string which is to be executed with the spexecute sql procedure must be of nvarchar type part 2 checks to see if the temporary table with the name tbl dbobjects already exits if temporary table tbl dbobjects exits it drops it then it creates a temporary table with the name tbl dbobjects ‘’ tells that the table should be temporary so is created in the tempdb database a temporary table is automatically dropped once the script completes execution uccessfully part 3 create a sql string which inserts the values in tbl dbobjects as it loops through databases and select values from the sysobjects table the reason for using this string and spexecute sql is that it could enable us to provide object type as an input in case we want to write a stored procedure and pass the object name as well as object type as input parameters providing object types would extract smaller result set and might also speed up operation where there are too many enormous databases this has been explained in script v part 4 once the temp table has been populated records can be pulled out as needed heres a stored procedure may want to use to find objects create proc find objectusp  objname varchar 200  null  objtype varchar 20  null  as declare sqlstr nvarchar 200  insert wildcard if exact search is not required  set objname    objname    its better to supply custom wild card in the input parameter objname  drop the temporary table if already exists  if objectid tempdbtbl dbobjects is not null drop table tbl dbobjects  create temporary table  create table tbl dbobjects  db name sysname obj name varchar 200 objtype char 2  begin if objtype  check select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  c if objtype  default select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  d if objtype  foreign key select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  f if objtype  log select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  l if objtype  scalar function select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  fn if objtype  inlined tablefunction select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  if if objtype  stored procedure select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  p if objtype  primary key select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  pk if objtype  replication filter stored procedure select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  rf if objtype  system table select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  s if objtype  table function select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  tf if objtype  trigger select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  tr if objtype  user table select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  u if objtype  unique constraint select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  uq if objtype  view select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  v if objtype  extended stored procedure select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects where xtype  x if objtype   or objtype is null select sqlstr  spmsforeachdb insert tbl dbobjects select  as dbname name xtype from sysobjects end  execute sql string  if sqlstr   or sqlstr is not null exec spexecutesql sqlstr  if objname is not supplied it should still return result  if objname   or objname is null select  from tbl dbobjects else select  from tbl dbobjects where obj name like objname return script v the above script creates a stored procedure which takes two optional parameters objname name of the object to be searched and objtype type of the object to be searched different types of object type and their abbreviations can be found in sql online help for sysobjects string stored procedure find objectusp creates different sql string based on different object types eg objtype parameter if objtype is not provided is selects all the objects from sysobjects table and inserts into tbl dbobjects temp table it is evident that incase of enormous databases if object type is known providing objtype parameter makes query much faster once tbl dbobjects table has been populated it can be queried with objname parameter with or without a wild card as needed we can execute the find objectusp procedure for example to find a object of type check constraints whose name starts with ‘ckb’ asexec find objectusp ckb checkor exec find objectusp1 xp null conclusion i assume that this procedure would be used by database administrators on an as needed basis this is not something which would run on database servers most of the time but if performance is an issue you could substitute the use of a temp table with a table datatype once the procedure is in place somewhere in a dbadmin or similar database where dba scripts are kept you can start using it which would hopefully make dba’s life much easier about author ashish holds a bse in electronic engineer and has 11 years of computingspecific experience including varied experiences from clientserver design and development to websites design and development  database administration to system administration he has been working with design development and administration of sql server for 6 years he has msce mcdba and mct certifications and works as independent consultant and trainer ashish can be reached at ashish4gltechcom published with the express written permission of the author copyright 2004 keep up to date with sql server  new articles every day sign up thank this author by sharing rate this join the discussion add to briefcase total article views 16280  views in the last 30 days 13 