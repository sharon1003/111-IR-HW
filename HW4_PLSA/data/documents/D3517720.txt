sme slating the right nodes posted on november 15 2017 by davewortley whilst working on my next tool i hit a rather large stumbling block getting the selected nodes in the slate material editor only passes you string names the problem with the sme and 3dsmax in general is that mapsmaterials can share the same names and to get the selected materials from the sme we need to reference by name… this can easily cause problems with complex material subtrees where submaps and submats have the same name or you have two material trees in your sme view which have the same named but different materials in their graphs below is a function which does a dirty workaround of this by temporarily giving every map a unique name then collecting the selection of matsmaps values from the sme then renaming back to original names our collection will still be valid as we’ve now got a pointer to materials not string namesfn get selected from sme   –get all the node names in sme sme names   for i  1 to smeget view smeactive view get num nodes  collect  smeget view smeactive viewget node i name–let’s see if we have clashing materialmap names in the sme before we bother doing dirty tricksif make unique array sme names count  sme names count then  –if no clashes we can use the standard method for getting the selected nodes by looking at the trackview and finding the name sel nodes  sme get view smeactive viewgetselectednodes  selected nodes names  for o in sel nodes collect o nameselected maps   for i  1 to track view nodes  sme smeactive viewnum subs do  if superclassof track view nodes  sme smeactive view ireference  texture map or superclassof track view nodes sme smeactive view ireference  material and finditem selected nodes names track view nodes sme smeactive view i referencename  0 do append selected maps track view nodes  sme smeactive view ireference selected maps  else  –if not we need to work out which are nodes which have the same name create a list of these all items  make unique array sme names for i  1 to all items count do deleteitem sme names finditem sme names all items i clash names  make uniquearray sme names–we’ll use this array to keep a record of which we changed change id   –loop through all the nodes in the smefor i  1 to track view nodes  sme smeactive viewnum subs do  –if we find one which has a clashing name…if finditem clash names track view nodes  sme smeactive view i referencename  0 do  –add it to our change id with the index and original name append change id datapair v1i v2track view nodes  sme smeactive view i referencename–set the name to a unique name using what will hopefully be a safe name track view nodes  sme smeactive view i referencename  “”  i as string –now we can get the selected names and all names will be unique sel nodes  sme get view smeactive viewgetselectednodes  selected nodes names  for o in sel nodes collect o nameselected maps   –now we loop through the track view sme nodes and find the references using the names as all names are now uniquefor i  1 to track view nodes  sme smeactive viewnum subs do  if superclassof track view nodes  sme smeactive view ireference  texture map or superclassof track view nodes sme smeactive view ireference  material and finditem selected nodes names track view nodes sme smeactive view i referencename  0 do append selected maps track view nodes  sme smeactive view ireference  –this returns an array of mapsmaterials values – at this point the names have been modified but now we have a pointer to the mapmat it doesn’t matter any more selected maps–now we loop through our change id and change them back to original clashing names so the user won’t freak outfor o in change id do track view nodes  sme smeactive view ov1 referencename  ov2–our array of materialsmaps values have the original names but we’ll have the correct matmap values in our array selected maps   get selected from sme advertisements report this ad report this ad share this tweet in share email posted in 3dsmax max script  leave a comment