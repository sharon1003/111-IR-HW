join stack overflow to learn share knowledge and build your career email sign upor sign in with google facebook what is an unsigned char ask questionup vote384down votefavorite158in cc what an unsigned char is used for how is it different from a regular charc c charshare improve this questionedited dec 23 16 at 1138kirill kobelev8575 4 20 42asked sep 16 08 at 1805landon kuhn255k 35 90 118add a comment17 answers active oldest votesup vote470down voteaccepted in c there are three distinct character typescharsigned charunsigned char if you are using character types for text use the unqualified charit is the type of character literals like a or 0it is the type that makes up c strings like abcdeit also works out as a number value but it is unspecified whether that value is treated as signed or unsigned beware character comparisons through inequalities  although if you limit yourself to ascii 0127 youre just about safe if you are using character types as numbers usesigned char which gives you at least the 127 to 127 range 128 to 127 is commonunsigned char which gives you at least the 0 to 255 range at least because the c standard only gives the minimum range of values that each numeric type is required to cover sizeof char is required to be 1 ie one byte but a byte could in theory be for example 32 bits sizeof would still be report its size as 1  meaning that you could have sizeof char  sizeof long  1share improve this answeredited oct 24 14 at 342deduplicator315k 6 46 84answered sep 17 08 at 2104fruny5056 1 11 72to be clear could you have 32bit chars and 32bit integers and have sizeof int  sizeof char i know the standard says sizeof char  1 but is the relative sizeof int based on actual difference in size or the difference in range – joseph garvin jan 11 09 at 2321101 but there are four distinct character types in c wchart is one of them – eric z aug 24 13 at 9196since c11 you have 6 distinct types char signed char unsigned char wchart char16t char32t – marcinj feb 16 14 at 9539unheilig its common to place a space after sizeof because it is not a function but an operator it is imho even better style to omit the parenthesis when taking the size of a variable sizeof p or sizeof int this makes it clear quickly if it applies to a type or variable likewise it is also redundant to put parenthesis after return its not a function – patrick schlüter nov 28 14 at 12002 char it is the type of character literals like a or 0  is true in c but not c in c a is an int – chux may 10 16 at 1730show 7 more commentsup vote75down vote this is implementation dependent as the c standard does not define the signedness of char depending on the platform char may be signed or unsigned so you need to explicitly ask for signed char or unsigned char if your implementation depends on it just use char if you intend to represent characters from strings as this will match what your platform puts in the string the difference between signed char and unsigned char is as youd expect on most platforms signed char will be an 8bit twos complement number ranging from 128 to 127 and unsigned char will be an 8bit unsigned integer  0 to 255  note the standard does not require that char types have 8 bits only that sizeof char return 1 you can get at the number of bits in a char with charbit in limitsh there are few if any platforms today where this will be something other than 8 though there is a nice summary of this issue here as others have mentioned since i posted this youre better off using int8t and uint8t if you really want to represent small integersshare improve this answeredited dec 2 14 at 1757stefan van den akker3718 6 26 40answered sep 16 08 at 1808tgamblin436k 12 79 912signed char have only a minimum range of 127 to 127 not from 128 to 127 – 12431234123412341234123jan 28 17 at 640212431234123412341234123 technically true in that the c standard defines 127 to 127 as the minimum range i challenge you to find a platform that doesnt use twos complement arithmetic though on nearly every modern platform the actual range of signed chars will be 128 to 127 – tgamblin feb 6 17 at 755add a commentup vote34down vote because i feel its really called for i just want to state some rules of c and c they are the same in this regard first all bits of unsigned char participate in determining the value if any unsigned char object second unsigned char is explicitly stated unsigned now i had a discussion with someone about what happens when you convert the value 1 of type int to unsigned char he refused the idea that the resulting unsigned char has all its bits set to 1 because he was worried about sign representation but he dont have to its immediately following out of this rule that the conversion does what is intended if the new type is unsigned the value is converted by repeatedly adding or subtracting one more than the maximum value that can be represented in the new type until the value is in the range of the new type  6313p2 in a c99 draftthats a mathematical description c describes it in terms of modulo calculus which yields to the same rule anyway what is not guaranteed is that all bits in the integer 1 are one before the conversion so what do we have so we can claim that the resulting unsigned char has all its charbit bits turned to 1 all bits participate in determining its value  that is no padding bits occur in the object adding only one time ucharmax1 to 1 will yield a value in range namely ucharmaxthats enough actually so whenever you want to have an unsigned char having all its bits one you dounsigned char c   unsigned char  1it also follows that a conversion is not just truncating higher order bits the fortunate event for twos complement is that it is just a truncation there but the same isnt necessarily true for other sign representationsshare improve this answeranswered jan 14 09 at 1130johannes schaub  litb386k 90 742 10982why not just use ucharmax – nicolás jan 4 11 at 22012or the shorter 0 – jens oct 7 12 at 14351because unsigned type1 is some kind of idiom 0 isnt – patrick schlüter nov 28 14 at 1207if i have something like this int x  1234 and char y  x  binary representation of 1234 is 00000000 00000000 00000100 11010010  my machine is little endian so it reverses it and store in memory 11010010 00000100 00000000 00000000 lsb comes first now main part  if i use printf d  p printf will read first byte 11010010 only the output is 46 but 11010010 is 210 so why does it print 46  i am really confused i guess some char to integer promotion is doing something but i dont know – suraj jain aug 17 16 at 1023add a commentup vote21down vote as for example usages of unsigned charunsigend char is often used in computer graphics which very often though not always assigns a single byte to each colour component it is common to see an rgb or rgba colour represented as 24 or 32 bits each an unsigned char since unsigned char values fall in the range 0255 the values are typically interpreted as0 meaning a total lack of a given colour component255 meaning 100 of a given colour pigment so you would end up with rgb red as 25500  100 red 0 green 0 blue why not use a signed char arithmetic and bit shifting becomes problematic as explained already a signed char s range is essentially shifted by 128 a very simple and naive mostly unused method for converting rgb to grayscale is to average all three colour components but this runs into problems when the values of the colour components are negative red 255 0 0 averages to 85 85 85 when using unsigned char arithmetic however if the values were signed char s 127128128 we would end up with 99 99 99 which would be 29 29 29 in our unsigned char space which is incorrectshare improve this answeranswered sep 17 08 at 244zachary garrett316 1 7add a commentup vote12down vote if you want to use a character as a small integer the safest way to do it is with the int8t and uint8t typesshare improve this answeredited aug 16 13 at 1231yu hao928k 22 150 201answered sep 16 08 at 1812jbleners881 1 7 132not a good idea int8t and uint8t are optional and not defined on architectures where the byte size is not exactly 8 bits conversely signed char and unsigned char are always available and guaranteed to hold at least 8 bits it may be a common way but not the safest – chqrlie apr 6 15 at 2244this is a comment it doesnt answer the question – lundin nov 24 17 at 830add a commentup vote5down votechar and unsigned char arent guaranteed to be 8bit types on all platforms—they are guaranteed to be 8bit or larger some platforms have 9bit 32bit or 64bit bytes however the most common platforms today windows mac linux x86 etc have 8bit bytesshare improve this answeranswered sep 17 08 at 549bk1e202k 6 41 61the link above doesnt work – chirag jain dec 30 15 at 2048add a commentup vote3down vote an unsigned char is a unsigned byte value 0 to 255 you may be thinking of char in terms of being a character but it is really a numerical value the regular char is signed so you have 128 values and these values map to characters using ascii encoding but in either case what you are storing in memory is a byte valueshare improve this answeranswered sep 16 08 at 1816zac gochenour137 6add a commentup vote3down vote in terms of direct values a regular char is used when the values are known to be between charmin and charmax while an unsigned char provides double the range on the positive end for example if charbit is 8 the range of regular char is only guaranteed to be 0 127 because it can be signed or unsigned while unsigned char will be 0 255 and signed char will be 127 127 in terms of what its used for the standards allow objects of pod plain old data to be directly converted to an array of unsigned char this allows you to examine the representation and bit patterns of the object the same guarantee of safe type punning doesnt exist for char or signed charshare improve this answeredited aug 16 13 at 1232yu hao928k 22 150 201answered sep 16 08 at 1817julienne walker129 2actually it will most often be 128 128 – rasta jedi apr 24 16 at 220the standards only formally define the object representation as a sequence of unsigned char not an array specifically  any conversion is only formally defined by copying from the object to a real declared array of unsigned char  then inspecting the latter its not clear whether the or can be directly reinterpreted as such an array with the allowances for pointer arithmetic it would entail ie whether sequence  array in this usage theres a core issue 1701 opened in hopes of getting this clarified thankfully as this ambiguity is really bugging me recently – underscored aug 30 16 at 1249rasta jedi no it wont it cant a range of 128128 is physically impossible to represent with 8 bits that width only supports 28  256 discrete values but 128128  2  128  1 for 0  257 signmagnitude representation permits 127127 but has 2 bipolar zeroes twoscomplement representation maintains a single zero but makes up the range by having one more value on the negative side it permits 128127 and so on for both at larger bit widths – underscored aug 30 16 at 1252re my 2nd comment its reasonable to presume we can take a pointer to the 1st unsigned char of the or and then proceed using ptr from there to read every byte of it but afaict its not specifically defined as being allowed so were left to infer that its probably ok from lots of other passages and in many ways the mere existence of memcpy in the standard akin to a jigsaw puzzle which is not ideal well maybe the wording will improve eventually heres the cwg issue i mentioned but lacked space to link  openstdorgjtc1sc22wg21docscwgactivehtml1701 – underscored aug 30 16 at 1259underscored sorry that was a typo 128 127 is what i meant to type p yeah i know about the double zeros positive and negative zero with signmagnitude i must have been tired p – rasta jedi aug 30 16 at 2231add a commentup vote3down voteunsigned char takes only positive valueslike 0 to 255where assigned char takes both positive and negative valueslike 128 to 127share improve this answeredited nov 28 14 at 1150whoan5745 4 23 40answered jan 22 13 at 1041munna49 1add a commentup vote3down votesigned char has range 128 to 127 unsigned char has range 0 to 255char will be equivalent to either signed char or unsigned char depending on the compiler but is a distinct type if youre using cstyle strings just use char if you need to use chars for arithmetic pretty rare specify signed or unsigned explicitly for portabilityshare improve this answeredited dec 7 15 at 1509answered sep 16 08 at 1812james hopkin11k 1 30 60add a commentup vote2down vote if you like using various types of specific length and signedness youre probably better off with uint8t int8t uint16t etc simply because they do exactly what they sayshare improve this answeranswered sep 16 08 at 1818dark shikari7103 3 21 36add a commentup vote2down voteunsigned char is the heart of all bit trickery in almost all compiler for all platform an unsigned char is simply a byte an unsigned integer of usually 8 bits that can be treated as a small integer or a pack of bits in addiction as someone else has said the standard doesnt define the sign of a char so you have 3 distinct char types char signed char unsigned charshare improve this answeranswered sep 16 08 at 1914ugasoft1913 5 20 221bit trickery aka bit twiddling or bit hacking is indeed known to cause addiction  – chqrlie apr 6 15 at 22482its the 0s that cause problems to avoid addiction from twiddling stay away from the noughty bits – dragon lord may 23 16 at 1812add a commentup vote1down vote some googling found this where people had a discussion about this an unsigned char is basically a single byte so you would use this if you need one byte of data for example maybe you want to use it to set flags on and off to be passed to a function as is often done in the windows apishare improve this answeranswered sep 16 08 at 1816dbrien1250 10 13add a commentup vote1down voteunsigned numbers are always positive or zero and obey the laws of arithmetic modulo 2n where n is the number of bits in the typeexample if chars are 8 bits unsigned char variables have values between 0 and 255 while signed chars have values between 128 and 127share improve this answeranswered oct 13 15 at 813prateek joshi2339 1 24 30add a commentup vote0down vote an unsigned char uses the bit that is reserved for the sign of a regular char as another number this changes the range to 0  255 as opposed to 128  127 generally unsigned chars are used when you dont want a sign this will make a difference when doing things like shifting bits shift extends the sign and other things when dealing with a char as a byte rather than using it as a numbershare improve this answeranswered sep 16 08 at 1820jason of earthadd a commentup vote0down votequoted frome the c programming laugage book the qualifier signed or unsigned may be applied to char or any integer unsigned numbers are always positive or zero and obey the laws of arithmetic modulo 2n where n is the number of bits in the type so for instance if chars are 8 bits unsigned char variables have values between 0 and 255 while signed chars have values between 128 and 127 in a two s complement machine whether plain chars are signed or unsigned is machinedependent but printable characters are always positiveshare improve this answeredited jul 21 17 at 327answered jul 21 17 at 320zhao gang347 3 10add a commentup vote0down voteunsigned char takes only positive values 0 to 255 signed char takes positive and negative values 128 to 127share improve this answeranswered nov 24 17 at 2240nl628303 2 16add a commentprotected by bartek banachewicz oct 13 15 at 827thank you for your interest in this question because it has attracted lowquality or spam answers that had to be removed posting an answer now requires 10 reputation on this site the association bonus does not count  would you like to answer one of these unanswered questions instead not the answer youre looking for browse other questions tagged c c char or ask your own questionasked9 years 6 months agoviewed455822 timesactive4 months ago blog quantum computing site launches with the help of strangeworks linked117 difference between signed  unsigned char0 what is signed char0 what is difference between signed char and char in c language15 c type unsigned long int15 cout not printing number5 why i cant declare unsigned char test  “some text”3 sqlite cc api unsigned char 0 what datatype would be for unsigned char in c0 how many times will an unsigned char loop run3 simple character interpretation in csee more linked questions…related1689 what is the difference between include filename and include “filename”1936 how do you set clear and toggle a single bit2461 what are the differences between a pointer variable and a reference variable in c2248 what does the explicit keyword mean4255 the definitive c book guide and list7477 what is the “” operator in c1602 what is the copyandswap idiom1766 what is the rule of three2765 why is char  preferred over string for passwords20911 why is it faster to process a sorted array than an unsorted array hot network questions handling party progression in a dungeon the symmetry of months output your scorewhy cant erdogans dictatorship be defined as benevolent can a habitable world exist that would orbit in and out of a nebula why does xkcd say that autogyros will crash if the pilot reacts to a stall as in a normal airplane matrix trace  norm why should a person approaching retirement age make their portfolio less risky i hate the high taxes in nyc should i incorporate in or move to another state how many scales should one be proficient in why was president trump congratulating putin on winning the election heavily criticized how to derive the area of a circle without the use of calculus why has israel not expelled russian diplomats in response to skripal poisoning reviewer of ph d thesis doesnt allow me to write in the first person singular what does smash do and where is it documented is string expandable why do overridden variables get the wrong values in scala how do i prevent colleagues from making fun of the length of my password how can i know whether a female house guest is interested in more than a friendly visit in which direction does the water flow what important theorems were less well known before 2018 how to defend against homograph attacks is it ethical to force graduate applicants to decide before they hear back from all schools why did the soviet union name their strongest bomb tsar bombaquestion feed 