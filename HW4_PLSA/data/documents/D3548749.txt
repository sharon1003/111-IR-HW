list general discussion « previous message next message »from sgreen date november 29 2005 220pm subject re commaseparated joinsview as plain text the sequence you use to join a set of tables is sometimes determined completely by the logic of the join you should perform all of your cross joins and inner joins first a comma is equivalent to a cross join but starting with 5012 the comma has a lower evaluation priority than an explicit join so watch out then list your left or right joins it is very difficult to have both left and right joins in the same query and get a correct result you can nearly always transform a query containing both left join and a right join into a query using a cross join and a left join when given the opportunity in a query where several equivalent constructions are available as in a query that uses nothing but inner joins i try to list the smallest table first it may not have the least number of physical records but should have the fewest number of rows returned joins are geometrically expensive operations and the fewer rows you need to evaluate between stages of your joins the more likely you are to have better performance try to keep the columns that are references to or are referenced by other tables indexed the my sql query engine at least until 50 will use just one index per table per query which tables the columns come from in your results does not matter so long as you construct your table reference correctly above all else i strongly discourage the use of commajoins the explicit join syntax is not only less ambiguous but is the only way to declare an outer join with my sql when you use the explicit join syntax you are also less likely to form unintentional cartesian products which can absolutely clobber a querys performance shawn green database administrator unimin corporation  spruce pine matt monaco mmonaco3 stripped  wrote on 11292005 122245 am  what would be the most efficient order to join in say i have one main table with most columns i assume this should be the main table of the query then each table relates to the next is it as simple as putting them  in order peter brawley peterbrawley stripped  wrote in message news438bafca4030508 stylecolor666stripped  matt   when using joins by the simply supplying a comma separated list of  tables in  the from clause is the on argument normally associated with a join  intended  to be addressed in the where clause or should on still be used   theres no on clause for a join specified by a where clause and thats   one reason specifiying joins with join  on  is almost always  preferableit entirely disambiguates the join for the writer readers   and those others who later will have to divine what you meant     pb      matt monaco wrote  when using joins by the simply supplying a comma separated list of tables  in the from clause is the on argument normally associated with a join intended to be addressed in the where clause or should on still be used   comma separated join select u  acity from users u addresses a where uidauserid   actual join clause select u  acity from users u inner join addresses a on uidauserid     query style in question select u  acity from users u addresses a on uidauserid  if not on is there at least another viable argument the reason im interested is for a query involving 5 or 6 tables and where arguments which do not deal with the relationships i would like to assure the efficiency  of this query   thanks in advance matt         no virus found in this outgoing message  checked by avg free edition  version 71362  virus database 267138184  release date 11272005    my sql general mailing list for list archives httplistsmysqlcommysql to unsubscribe httplistsmysqlcommysqlunsub1thread• commaseparated joins matt monaco 29 nov• re commaseparated joins peter brawley 29 nov• re commaseparated joins matt monaco 29 nov• re commaseparated joins sgreen 29 nov• re commaseparated joins matt monaco 29 nov© 1995 2018 oracle corporation andor its affiliates legal policies your privacy rights terms of use contact us page generated in 0025 sec content reproduced on this site is the property of the respective copyright holders it is not reviewed in advance by oracle and does not necessarily represent the opinion of oracle or any other party 