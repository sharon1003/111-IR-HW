from wikipedia the free encyclopedianavigation search this article may rely excessively on sources too closely associated with the subject potentially preventing the article from being verifiable and neutral please help improve it by replacing them with more appropriate citations to reliable independent thirdparty sources may 2015  learn how and when to remove this template messagelab viewdeveloper s national instruments initial release 1986 32 years ago stable release 2017  january 2018 3 months ago operating system crossplatform windows mac os linux type data acquisition instrument control test automation analysis and signal processing industrial control embedded system design license proprietary website www ni com labview laboratory virtual instrument engineering workbench  lab view 1 3 is a systemdesign platform and development environment for a visual programming language from national instruments the graphical language is named g not to be confused with gcode originally released for the apple macintosh in 1986 lab view is commonly used for data acquisition instrument control and industrial automation on a variety of operating systems oss including microsoft windows various versions of unix linux and mac os the latest versions of lab view are lab view 2017 sp1 and lab view nxg 20 released in january 2018 2contents  hide 1 dataflow programming2 graphical programming21 widelyaccepted design patterns3 benefits31 interfacing to devices32 code compiling33 large libraries34 parallel programming35 ecosystem36 user community37 home bundle edition4 criticism41 slow42 nontextual43 no zoom function5 release history6 repositories and libraries7 related software8 see also9 references10 further reading101 articles on specific uses102 articles on education uses11 external links dataflow programming  editthe programming paradigm used in lab view sometimes called g is based on data availability if there is enough data available to a sub vi or function that sub vi or function will execute execution flow is determined by the structure of a graphical block diagram the lab viewsource code on which the programmer connects different functionnodes by drawing wires these wires propagate variables and any node can execute as soon as all its input data become available since this might be the case for multiple nodes simultaneously lab view can execute inherently in parallel 3 1–2 multiprocessing and multithreading hardware is exploited automatically by the builtin scheduler which multiplexes multiple os threads over the nodes ready for execution graphical programming  editlab view integrates the creation of user interfaces termed front panels into the development cycle lab view programssubroutines are termed virtual instruments vis each vi has three components a block diagram a front panel and a connector panel the last is used to represent the vi in the block diagrams of other calling vis the front panel is built using controls and indicators controls are inputs they allow a user to supply information to the vi indicators are outputs they indicate or display the results based on the inputs given to the vi the back panel which is a block diagram contains the graphical source code all of the objects placed on the front panel will appear on the back panel as terminals the back panel also contains structures and functions which perform operations on controls and supply data to indicators the structures and functions are found on the functions palette and can be placed on the back panel collectively controls indicators structures and functions are referred to as nodes nodes are connected to one another using wires eg two controls and an indicator can be wired to the addition function so that the indicator displays the sum of the two controls thus a virtual instrument can be run as either a program with the front panel serving as a user interface or when dropped as a node onto the block diagram the front panel defines the inputs and outputs for the node through the connector panel this implies each vi can be easily tested before being embedded as a subroutine into a larger program the graphical approach also allows nonprogrammers to build programs by dragging and dropping virtual representations of lab equipment with which they are already familiar the lab view programming environment with the included examples and documentation makes it simple to create small applications this is a benefit on one side but there is also a certain danger of underestimating the expertise needed for highquality g programming for complex algorithms or largescale code it is important that a programmer possess an extensive knowledge of the special lab view syntax and the topology of its memory management the most advanced lab view development systems offer the ability to build standalone applications furthermore it is possible to create distributed applications which communicate by a client–server model and are thus easier to implement due to the inherently parallel nature of g widelyaccepted design patterns  editapplications in lab view are usually designed using wellknown architectures known as design patterns the most common design patterns for graphical lab view applications are listed in the table below common design patterns for lab view applications design pattern purpose implementation details use cases limitations functional global variable exchange information without using global variables a shift register of a while loop is used to store the data and the while loop runs only one iteration in a nonreentrant viexchange information with less wiring all owning vis are kept in memory state machine 4controlled execution that depends on past events case structure inside a while loop pass an enumerated variable to a shift register representing the next state complex state machines can be designed using the statechart module user interfaces complex logic communication protocols all possible states must be known in advance eventdriven user interface lossless processing of user actions gui events are captured by an event structure queue inside a while loop the while loop is suspended by the event structure and resumes only when the desired events are captured graphical user interface only one event structure in a loop masterslave 5run independent processes simultaneously several parallel while loops out of which one functions as the master controlling the slave loops simple gui for data acquisition and visualization attention to and prevention of race conditions is required producerconsumer 6asynchronous of multithreaded execution of loops a master loop controls the execution of two slave loops that communicate using notifiers queues and semaphores dataindependent loops are automatically executed in separate threads data sampling and visualization order of execution is not obvious to control queued state machine with eventdriven producerconsumer highly responsive userinterface for multithreaded applications an eventdriven user interface is placed inside the producer loop and a state machine is placed inside the consumer loop communicating using queues between themselves and other parallel vis complex applications benefits  editinterfacing to devices  editlab view includes extensive support for interfacing to devices instruments camera and other devices users interface to hardware by either writing direct bus commands usb gpib serial or using highlevel devicespecific drivers that provide native lab view function nodes for controlling the device lab view includes builtin support for ni hardware platforms such as compact daq and compact rio with a large number of devicespecific blocks for such hardware the measurement and automation e xplorer max and virtual instrument software architecture visa toolsets national instruments makes thousands of device drivers available for download on the ni instrument driver network idnet 7code compiling  editlab view includes a compiler that produces native code for the cpu platform this aids performance the graphical code is translated into executable machine code by a compiler the lab view syntax is strictly enforced during the editing process and compiled into the executable machine code when requested to run or upon saving in the latter case the executable and the source code are merged into a single file the executable runs with the help of the lab view runtime engine which contains some precompiled code to perform common tasks that are defined by the g language the runtime engine reduces compiling time and provides a consistent interface to various operating systems graphic systems hardware components etc the runtime environment makes the code portable across platforms generally lab view code can be slower than equivalent compiled c code although the differences often lie more with program optimization than inherent execution speed  citation neededlarge libraries  editmany libraries with a large number of functions for data acquisition signal generation mathematics statistics signal conditioning analysis etc along with numerous for functions such as integration filters and other specialized abilities usually associated with data capture from hardware sensors is enormous in addition lab view includes a textbased programming component named math script with added functions for signal processing analysis and mathematics math script can be integrated with graphical programming using script nodes and uses a syntax that is compatible generally with matlab 8parallel programming  editlab view is an inherently concurrent language so it is very easy to program multiple tasks that are performed in parallel via multithreading for example this is done easily by drawing two or more parallel while loops and connecting them to two separate nodes this is a great benefit for test system automation where it is common practice to run processes like test sequencing data recording and hardware interfacing in parallel ecosystem  editdue to the longevity and popularity of the lab view language and the ability for users to extend its functions a large ecosystem of third party addons has developed via contributions from the community this ecosystem is available on the lab view tools network which is a marketplace for both free and paid lab view addons user community  editthere is a lowcost lab view student edition aimed at educational institutions for learning purposes there is also an active community of lab view users who communicate through several electronic mailing lists email groups and internet forums home bundle edition  editnational instruments provides a low cost lab view home bundle edition 9criticism  editlab view is a proprietary product of national instruments unlike common programming languages such as c or fortran lab view is not managed or specified by a third party standards committee such as american national standards institute ansi institute of electrical and electronics engineers ieee international organization for standardization iso etc slow  editvery small applications still have to start the runtime environment which is a large and slow task this tends to restrict lab view to monolithic applications examples of this might be tiny programs to grab a single value from some hardware that can be used in a scripting language  the overheads of the runtime environment render this approach impractical with lab view  citation needednontextual  editg language being nontextual software tools such as versioning sidebyside or diff comparison and version code change tracking cannot be applied in the same manner as for textual programming languages there are some additional tools to make comparison and merging of code with source code control versioning tools such as subversion cvs and perforce 10 11 12no zoom function  editthere is no ability to zoom in to or enlarge a vi which will be hard to see on a large highresolution monitor although this feature is under development as of 2016 13 14release history  editin 2005 starting with lab view 80 major versions are released around the first week of august to coincide with the annual national instruments conference ni week and followed by a bugfix release the following february in 2009 national instruments began naming releases after the year in which they are released a bugfix is termed a service pack for example the 2009 service pack 1 was released in february 2010 in 2017 national instruments moved the annual conference to may and released lab view 2017 along side a completely redesigned lab view nxg 10 built on windows presentation foundation wpf nameversion build number date lab view project begins april 1983lab view 10 for macintosh  october 1986lab view 20  january 1990lab view 25 first release for sun  windows  august 1992lab view 30 multiplatform  july 1993lab view 301 first release for windows nt  1994lab view 31  1994lab view 311 first release with application builder ability  1995lab view 40  april 1996lab view 41  1997lab view 50  february 1998lab view rt real time  may 1999lab view 60 6i 6004005 26 july 2000lab view 61 6104004 12 april 2001lab view 70 express 7004000 april 2003lab view pda module first released  may 2003lab view fpga module first released  june 2003lab view 71 7104000 2004lab view embedded module first released  may 2005lab view 80 8004005 september 2005lab view 820 native object oriented programming  august 2006lab view 821 8214002 21 february 2007lab view 85 8504002 2007lab view 86 8604001 24 july 2008lab view 861 8604001 10 december 2008lab view 2009 32 and 64bit 9004022 4 august 2009lab view 2009 sp1 9014011 8 january 2010lab view 2010 10004032 4 august 2010lab view 2010 f2 10004033 16 september 2010lab view 2010 sp1 10014004 17 may 2011lab view for lego mindstorms 2010 sp1 with some modules august 2011lab view 2011 11004029 22 june 2011lab view 2011 sp1 11014015 1 march 2012lab view 2012 12004029 august 2012lab view 2012 sp1 12014013 december 2012lab view 2013 13004047 august 2013lab view 2013 sp1 13014017 march 2014 15lab view 2014 august 2014lab view 2014 sp1 14014008 march 2015lab view 2015 150f2 august 2015lab view 2015 sp1 1501f1 march 2016lab view 2016 1600 august 2016lab view 2017 170f1 may 2017repositories and libraries  editopen g as well as lava code repository lavacr serve as repositories for a wide range of open source lab view applications and libraries source forge has lab view listed as one of the possible languages in which code can be written vi package manager has become the standard package manager for lab view libraries it is very similar in purpose to rubys ruby gems and perls cpan although it provides a graphical user interface similar to the synaptic package manager vi package manager provides access to a repository of the open g and other libraries for lab view tools exist to convert math ml into g code 16related software  editnational instruments also offers a product named measurement studio which offers many of the test measurement and control abilities of lab view as a set of classes for use with microsoft visual studio this allows developers to harness some of lab views strengths within the textbased  net framework national instruments also offers lab windowscvi as an alternative for ansi c programmers when applications need sequencing users often use lab view with test stand test management software also from national instruments the ch interpreter is a c  c interpreter that can be embedded in lab view for scripting 17the tril centre ireland bio mobius platform and dsp robotics flow stone dsp also use a form of graphical programming similar to lab view but are limited to the biomedical and robotics industries respectively lab view has a direct node with mode frontier a multidisciplinary and multiobjective optimization and design environment written to allow coupling to almost any computeraided engineering tool both can be part of the same process workflow description and can be virtually driven by the optimization technologies available in mode frontier see also  edit20sim comparison of numerical analysis software dataflow programming drakonfourthgeneration programming language graphical programming graphical system design lab windowscvilego mindstorms nxt whose programming environment nxtg is based on lab view and can be programmed within lab view matlab  simulink virtual instrumentation compact daqcompact rioreferences  edit jeffrey travis 2006 lab view for everyone  graphical programming made easy and fun kring jim 3rd ed upper saddle river nj prentice hall isbn 0131856723 oclc 67361308 rowe martin lab view nxg version 20 is coming edn network aspencore retrieved 16 september 2017 bress thomas j 2013 effective lab view programming sl  nts press isbn 1934891088 application design patterns state machines national instruments whitepapers 8 september 2011 retrieved 21 september 2017 application design patterns masterslave national instruments whitepapers 7 october 2015 retrieved 21 september 2017 application design patterns producerconsumer national instruments whitepapers 24 august 2016 retrieved 21 september 2017 ni instrument driver network lab view math script rt module wwwnicom lab view home bundle for windows httpthinkingingcom20070617top5badexcusesfornotusingsourcecodecontrol httpwwwnicomwhitepaper4114en httpwwwnicomtutorial14304en can i zoom in or out on a lab view diagram for wiring or viewing purposes retrieved february 1 2016 add a zoom function yes i said zoom so sue me forumsnicom retrieved 20160331 httpwwwnicomwhitepaper5920en httpsdecibelnicomcontentdocsdoc13859 embedding a cc interpreter ch into lab view for scripting further reading  editbress thomas j 2013 effective lab view programming sl  nts press isbn 1934891088 blume peter a 2007 the lab view style book upper saddle river nj prentice hall isbn 0131458353 travis jeffrey kring jim 2006 lab view for everyone  graphical programming made easy and fun 3rd ed upper saddle river nj prentice hall isbn 0131856723 conway jon watts steve 2003 a software engineering approach to lab view upper saddle river nj prentice hall ptr isbn 0130093653 olansen jon b rosow eric 2002 virtual bioinstrumentation  biomedical clinical and healthcare applications in lab view upper saddle river nj prentice hall ptr isbn 0130652164 beyon jeffrey y 2001 lab view programming data acquisition and analysis upper saddle river nj prentice hall ptr isbn 0130303674 travis jeffrey 2000 internet applications in lab view upper saddle river nj prentice hall ptr isbn 0130141445 essick john 1999 advanced lab view labs upper saddle river nj prentice hall isbn 013833949x articles on specific uses  editdesnica v schreiner m vladan schreiner manfred october 2006 a lab viewcontrolled portable xray fluorescence spectrometer for the analysis of art objects xray spectrometry 35 5 280–286 doi 101002xrs906 keleshis c ionita c rudin s c ionita c rudin s june 2006 labview sic graphical user interface for micro angiofluoroscopic high resolution detector medical physics 33 6 2007 doi 10111812240285 fedak w bord d smith c gawrych d lindeman k w bord d smith c gawrych d lindeman k may 2003 automation of the franckhertz experiment and the telxometer xray machine using labview american journal of physics aapt 71 5 501–506 doi 10111911527949 articles on education uses  editbelletti a borromei r ingletto g a borromei r ingletto g september 2006 teaching physical chemistry experiments with a computer simulation by lab view journal of chemical education acs 83 9 1353–1355 doi 101021ed083p1353 moriarty p j gallagher b l mellor c j baines r r p j gallagher b l mellor c j baines r r october 2003 graphical computing in the undergraduate laboratory teaching and interfacing with lab view american journal of physics aapt 71 10 1062–1074 doi 10111911582189 lauterburg urs june 2001 lab view in physics education pdf a white paper about using lab view in physics demonstration and laboratory experiments and simulations drew sm steven m december 1996 integration of national instruments lab view software into the chemistry curriculum journal of chemical education acs 73 12 1107–1111 doi 101021ed073p1107 muyskens ma glass sv wietsma tw gray tm mark a glass samuel v wietsma thomas w gray terry m december 1996 data acquisition in the chemistry laboratory using lab view software journal of chemical education acs 73 12 1112–1114 doi 101021ed073p1112 ogren pj jones tp paul j jones thomas p december 1996 laboratory interfacing using the lab view software package journal of chemical education acs 73 12 1115–1116 doi 101021ed073p1115 trevelyan j p june 2004 10 years experience with remote laboratories pdf international conference on engineering education research acs external links  editofficial website national instruments lab view tools network  ecosystem of lab view addon products contributed by ni and the community lab view help  nis entire set of online help documentation for lab view 2012 lab view help  nis entire set of online help documentation for lab view 2010 lab view help  nis entire set of online help documentation for lab view 2009 lab view help  nis entire set of online help documentation for lab view 85 lab view help  nis entire set of online help documentation for lab view 820 official lab view community home page  nis lab view zone web site lava lab view advanced virtual architects  independent community with discussion forums and a code repository infolab view  a lab view electronic mailing list open g  opensource lab view utilities the lab view wiki  a user editable lab view knowledge base powered by media wiki free online lab view programming course  this course was authored by ni and is hosted by connexions international multilanguage mostly russian and german forum and site dedicated to lab viewitpointed lab view forum dutchlanguage based user group dedicated to lab viewlab view turkey project community  turkish italian lab view user group  italian lab view link collection tutorials blogs toolkits hardware labview source codes for labview programmers visit rfwireless world labview section what is lab view basics of lab view including tutorial  showv t e national instruments  showv t e numerical analysis software categories numerical software visual programming languages numerical programming languages numerical analysis software for linux numerical analysis software for mac osnumerical analysis software for windows crossplatform software pedagogic integrated development environments synchronous programming languages software modeling language 