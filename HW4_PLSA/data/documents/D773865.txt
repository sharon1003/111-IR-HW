installing and using open vz on cent os 5please note that the open vz kernel is a product of the open vz project and is not supported by cent os the open vz project follows the rhel kernels closely and provides updates in a somewhat timely fashion after updated red hat and cent os kernels are released as a result the rhelbased open vz kernels are well suited for use on rhel and cent os hosts with support for almost all of the same hardware please note though that the open vz kernel is less modular than the stock red hat  cent os kernels with some hardware support being compiled in it is recommended you read this howto in its entirety before attempting any of the operations shown in it what is open vz open vz is operating systemlevel virtualization based on a modified linux kernel that allows a physical server to run multiple isolated instances known as containers virtual private servers vps or virtual environments ve the preferred term these days is container containers are sometimes compared to chroot or jail type environments but containers are really much better in terms of isolation security functionality and resource management open vz consists of a custom linux kernel available from the open vz project and some userlevel tools open vz is very portable does not rely on vt support in the cpu and as a result it is available for a number of cpu families including x86 x8664 ia64 power pc and sparc oslevel virtualization is quite different from machine  hardware virtualization products such as vmware server parallels workstation virtual box qemu kvm and xen in that with open vz you can only do linux on linux virtualization open vz modifies the linux kernel to add advanced containerization features which allow for isolated groups of processes under a parent init along with about twenty dynamic resource management parameters for controlling container resource usage the open vz project maintains three stable kernel branches rhel4  cent os4 269 based rhel5  cent os 5 2618 based vanilla 2618 based there are a number of unstable branches based on newer versions of the linux kernel that may eventually reach stable status why use open vz since it is relatively light weight os virtualization offers a number of benefits over machine  hardware virtualization it is much more efficient it scales better it offers much greater machine density it offers a larger number of resource management parameters resource management is dynamic so no container restart is needed open vz is able to achieve better performance so close to native it is hard to measure a difference scalability and density because there is a single linux kernel running on the physical host with each container only taking up the resources necessary for running the processes  services you want inside them without all of the overhead of a full operating system a basic container might be between 814 additional processes on the host node open vz can also handle more advanced applications such as huge multithreaded java applications with hundreds of threads  processes given the appropriate amount of container resource management configuration another advantage of open vz is that it offers a wide range of dynamic resource management parameters including several for memory usage number of processes cpu usage disk space usage etc all of which may be changed while the container is running open vz also supports container disk quotas as well as optional user and group disk quotas within the containers open vz offers a number of advanced features including checkpointing and container migration from one physical host to another migration comes in two forms live migration minimizes downtime only a few seconds and maintains machine uptime and network connections offline migration where the machine is stopped migrated and then started back up again the migration features of open vz do not require a shared storage solution and utilizes rsync to flawlessly copy container directory structures from one physical host to another when not to use os virtualization while there are a large number of usage scenarios where you would want to use os virtualization there remain a few scenarios where os virtualization is not suited and machine  hardware virtualization would be preferred when you need to run nonlinux oses when you want to run multiple kernel versions when you need a highly customized kernel open vz history swsoft now known as parallels initially released a product for linux named virtuozzo back in 2001 their current product is named parallels virtuozzo containers in 2005 a version of virtuozzo was released for microsoft windows also in 2005 swsoft created the open vz project to release under a gpl 2 license the underlying technology upon which virtuozzo builds while os virtualization does not seem to have garnered the press attention and excitement some of the machine  hardware virtualization products have gotten in recent years having initially been released in 2001 virtuozzo and 2005 open vz they have both proven themselves to be efficient stable and secure workhorses on tens of thousands of servers around the world linux os virtualization which includes linuxvserver is arguably the oldest and most widely deployed linux virtualization platform to date os virtualization and open vz future in a few presentations in 2007 and 2008 on the future of the linux kernel andrew morton identified containers as being the only thing he was certain of that was coming to the linux kernel because there were a number of strong stake holders working on it including ibm google and the open vz project container features started appearing in the mainline kernel starting with the 2624 kernel and more have been added in subsequent releases the joint effort is more commonly referred to as control groups or cgroups for short and a number of kernel subsystems have been modified scheduler memory management etc to be cgroup aware it is not known how long it will take before the cgroup implementation in the mainline linux kernel will be feature complete stable and in wide use so it appears that open vz will be around for some time to come there is another os virtualization product for linux named linuxvserver linuxvserver is a quality product  project too but there are a number of differences between open vz and linuxvserver parallels  open vz are working with the mainline linux kernel developers to get container features into the mainline linux kernel the linuxvserver developers are working independently and have decided that linuxvserver will stay an outoftree patch for the foreseeable future that is not to say that open vz is going directly into the mainline kernel because it is not the cgroup effort is a consensus of all of its stakeholders it is clear however that the open vz project has contributed a lot of code to the mainline kernel installing open vzthe open vz project website  wwwopenvzorg has a lot of quality documentation including a users guide pdf a quick installation guide and a vast wiki of howto and troubleshooting articles this article will briefly cover the installation process you will need to be the root user for all of the following tasks adding the open vz yum repository installing open vz on a cent os 4 or cent os 5 host is very easy because the open vz project provides an openvzrepo for use with yum simply download the openvzrepo file and place it in the etcyumreposd directory examine the openvzrepo file as it contains a number of repository definitions with two being enabled by default 1 rhel5based kernel and 2 the open vz utilities edit it to meet your needs import the open vz keyrpm import httpdownloadopenvzorgrpmgpgkeyopen vzinstall the open vz kernel depending on which kernel arch you want simply doyum install ovzkerneli386oryum install ovzkernelx8664with the open vz kernel installed it is almost time to reboot but before rebooting a few additional details need to be taken care of examine etcgrubconf to ensure the desired kernel is set to be the defaultedit the etcsysctlconf to enable some kernel features that are needed for open vz and make sure selinux is disabled i will not cover how to edit etcgrubconf since that is a fairly common nonopen vz specific task editing etcsysctlconf if desired backup your original sysctlconf file  cp etcsysctlconf etcsysctlconforiginal  edit the etcsysctlconf file with your preferred text editor and add the following on hardware node we generally need  packet forwarding enabled and proxy arp disabled netipv4ipforward  1 netipv4confdefaultproxyarp  0  enables source route verification netipv4confallrpfilter  1  enables the magicsysrq key kernelsysrq  1  tcp explict congestion notification  netipv4tcpecn  0  we do not want all our interfaces to send redirects netipv4confdefaultsendredirects  1 netipv4confallsendredirects  0disabling selinuxunfortunately selinux is not compatible with nor included in the open vz kernel to disable selinux edit the etcsysconfigselinux config file with your preferred text editor and set it to disabled selinuxdisabled now it is time to reboot your computer into the open vz kernel installing the utilities to install the open vz utility programs simply doyum install vzctl vzquota once vzctl is installed you want to start up the open vz service by doing the followingservice vz start the vz service should be set to start up automatically but feel free to check it withchkconfig list vz now open vz is fully installed and you are ready to create your first container but first you need to get installation media for the desired linux distribution using open vzos templates  linux distribution install media the vzctl command is used to create and configure open vz containers before you can create a container you need install media for the linux distribution you want to install open vz can not use cd  dvd install media nor iso disk image files open vz requires what it calls an os template to create a container for a given linux distribution you can download a number of precreated os templates from the open vz website this is the recommended route for new open vz users once you are more familiar with open vz you may want to create your own os templates from scratch using a variety of recipes available on the open vz wiki you can find precreated os templates provided by the open vz project herehttpdownloadopenvzorgtemplateprecreatedyou can also find community contributed os templates herehttpdownloadopenvzorgcontribtemplateprecreateddownload the desired os template file and place it in the vztemplatecache directory on your cent os 5 host node creating your first container to create a container you use the vzctl command with the create option and a few other parameters you will need to decide on a unique container id number ctid you will also need some additional information what os template do you want to install from what ip address will it have what hostname do you want to give it what initial resources do you want it to have taken from a sample configuration template these are all set with the following parametersostemplate template name conf config name ipadd nnnnnnnn hostname fqdnhere is a complete examplevzctl create 101  ostemplate centos5i386default  conf vpsbasic  ipadd 199199199199  hostname mynewcontainercom that will create a directory named vzprivate ctid and extract the os template into it it will also copy the specified config file to etcvzconf ctidconf to create a configuration for the container please note that the values given for ostemplate and conf do not match up to full os template nor the configuration filenames and are somewhat truncated the vpsbasic configuration is just that very basic with a somewhat conservative amount of resources given to the container for a look at the various resource parameters and their values feel free to have a look at the sample configuration files in the etcvzconf directory you can create your own configuration samples as many as you like using the vzsplit command  man vzsplit or by copying existing config files to new files and editing them after you create a machine you need to set a few additional parameters using the vzctl set command heres an examplevzctl set 101  name mynew  nameserver 205171265 205171365  diskspace 10g10g  save that will update your containers config file in this example etcvzconf101conf  any time you run the vzctl set command if you dont include the save parameter it will not save the configuration changes to your config file but if the container is running it will dynamically change the parameters in the running container for that session you will almost always want to include the save as the last parameter for the vzctl set command starting your new container just issue the following command to start your new containervzctl start ctidor following our examplevzctl start 101you should see a message about your container starting up assuming you didnt botch any of the parameters it should start right up as you would expect the keywords stop and restart also work as expected if a container is not running you can destroy it which will remove its config file as well as delete its directory structure  vzprivate ctid from the host node filesystem entering your new container once your container is going it should be accessible via the network just like a physical server would be but since you are on the host node you can use a vzctl shortcut to directly enter the container as root without authenticationvzctl enter ctidfollowing our examplevzctl enter 101you should get a new command prompt inside of your new container you will probably want to set a root password by using the passwd command or you could do the following from the host nodevzctl set ctid userpasswd user password save it is assumed that you are a fairly good linux system administrator who is not afraid of the command line have a look around your new system it should look and act almost identically to a physical machine you can install software see section about yum below create accounts add new system services and modify their configurations you can view the resources given to a container within it by looking at the procuserbeancounters file you can view all parameters given to all containers from the host node by looking at procuserbeancounters on the host node resource management is beyond the scope of this article so consult vzctl man page or the users guide pdf for complete information what if yum is missing in my container prior to january of 2009 the precreated os templates provided by the open vz project did not have yum installed and that seemed to have miffed a lot of users the reason was that some open vz system administrators prefered to use a tool on the host node named vzyum that allowed them to do yum type operations on containers from the host node why would they want to do that because the yum database and file caches can sometimes take up a significant amount of diskspace and bandwidth if each container has its own copy of yum using vzyum on the host node there is a single yum database  cache and the software packages only have to be downloaded once in january of 2009 the open vz project released updated precreated os templates for cent os that include yum so it is no longer an issue the official os templates are updated approximately once a month so there should be no reason to use older os templates without yum installed if you have a cent os os template that does not include yum it is either older than january 2009 or you got it from another source than the open vz project if you still have a cent os container without yum installed there is a wiki page on the open vz wiki that explains how to install yum in a container basically you download all of the rpm packages needed for yum and install them with rpm hopefully this issue has become a thing of the past in closing this article has only covered the very basics of open vz topics not covered include container monitoring  resource management configuration file editing  creation see the vzsplit man page the container filesystem or any additional tasks necessary to become a productive open vz system administrator also note that open vz has two types of network adaptors and only the basic  default venet was covered the veth network adaptor has a wider range of capabilities the documentation provided by the open vz project is really good and there is plenty of it be sure and read the users guide pdf guide for the most comprehensive documentation the users guide is a little dated though as it was written before the addition of the veth network device checkpointing and migration also available are the man pages for all of the various commands when you want to get into container migration be sure and read the vzmigrate man page you are encouraged to get involved and participate in the open vz project by visiting the open vz website using the forums the irc channel openvz on the freenode irc network as well as filing bugs if you run across any at httpbugzillaopenvzorg  get familiar with the open vz website as there is a lot of material there additional resources open vz project website open node baremetal cent osbased distro with open vz and kvm interview with open vz project manager os virtualization vs hardware virtualization video presentation from linuxfest northwest 2008 container migration demo video performance evaluation of xen vs open vz by hp labs open vz blog parallels inc linuxvserver website interview with linuxvserver project leader this is the initial release of this howto and i scott dowdle plan on updating it with additional information especially if i get any reader feedback suggestions and comments are encouraged feel free to email dowdle at montanalinuxorg please do not email the cent os mailing lists or visit the cent os irc channel with open vz related questions use the open vz irc channel and the various other open vz support resources instead 