management  mobility use getaduser to find inactive ad users search for people who havent logged on to a domain in 180 days mark minasi  jan 21 2012in “use getaduser to determine who has never logged on” instant doc id 141189 i showed you how to use active directorys ad’s power shell tools to find neverused user accounts at the same time i revealed the ad attributes accessible from power shell that might give you an idea about whos logged on and—more important—who hasnt logged on in a while this month lets search for people who havent logged on to a domain in say the past 180 days windows and ad retain a number of whenyoulastloggedonrelated attributes but theyre all a pain to get to you could look at accountlogon events but youd have to grab them from every domain controller dc and sort them by date and person to find the most recent of those events for each person not fun alternatively you could grab something like ads lastlogon user attribute but again dcs dont replicate that value so as in the case of the accountlogon event youd have to retrieve lastlogon s value from every dc in the domain then find the most recent one for each use that’s too much work fortunately on windows server 2003 and later domain functional levels microsoft added lastlogontimestamp an ad attribute that is replicated amongst dcs its stored as a fairly ugly large integer as i write this in october 2011 lastlogontimestamp s value is 129623232699932000 that isnt very easy to work with thus its a blessing that the ad power shell folks convert that into a straightforward value called last logon date that looks like saturday october 08 2011 10718 pm accessible via getaduser knowing this you can use this command to create a table of users sorted by when they last logged ongetaduser f  pr lastlogondatesort property lastlogondateft samaccountnamelastlogondate auto thus you can query any dc and see whether any user last logged on to the domain around say september 22 2011 well sort of you see microsoft added lastlogontimestamp to ad because many ad administrators wanted some way to track logons but redmond worried that adding something to ad that closely tracked logons could significantly increase ads replication burden to reduce lastlogontimestamp related replication traffic dcs update the value only every 9 to 14 days whenever a dc logs you on that dc looks at your current lastlogontimestamp value the dc then picks a random real number between 9 and 14 if the number of days between when you last logged on and now is smaller than the random number the dc doesn’t update your lastlogontimestamp value as a result each users lastlogontimestamp value gets updated only once every 12 days or so—no matter how often that user logs on during that time period less precision yes but also a lot less replication traffic suppose i log on to my domain at noon on january 20 2012 and i havent logged on since 900am january 9 of that year thus i haven’t logged on in 1125 days my dc then chooses a random number between 9 and 14 let’s assume it chooses 1344 the chosen random number 1344 is larger than the time span between my last two logons 1125 so my dc doesnt change my lastlogontimestamp value upon this logon clearly then although lastlogontimestamp is useful it might be wrong by as many as 14 days so its of no use to identify who hasnt logged on in the past two weeks for finding those who haven’t logged on in about six months though its quite useful you could try to do some gymnastics with getaduser to find those users who havent logged on in the past 180 days but the ad power shell folks saved us the effort with a cmdlet called searchadaccount which lets you perform this querysearchadaccount accountinactive usersonly timespan 195that looks simple but there are two things about this command that are unintuitive first notice the double quotes around the number 195 the timespan parameter absolutely requires those second notice that its 195 not 180 and remember you dont get lastlogontimestamp unless youre in windows 2003 domain functional level or greater searchadaccount has a quirk that requires you to add 15 to your target period of inactivity and in truth the value isnt exactly 15 days to learn why it does that and how to figure out the exact value to enter—as well as an alternative syntax to find inactive users—please join me next month1 comment related sponsored content ensuring rocksolid unified endpoint management mar 29 2018sponsored content predicting the future of endpoint management in a mobile world mar 29 2018gaining mobile edge 3 things you need to do to secure manage your business mobile phone mar 27 20185g networking what to expect and how to get ready mar 21 2018 